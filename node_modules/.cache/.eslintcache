[{"C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\reportWebVitals.js":"2","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\App.js":"3","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\useToken.js":"4","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Login\\login.jsx":"5","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\routes.jsx":"6","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\drawer.jsx":"7","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\firebase.js":"8","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\allElements.jsx":"9","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\report.jsx":"10","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\orderHistory.jsx":"11","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\workstations.jsx":"12","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\barchart.jsx":"13","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\donutchart.jsx":"14","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\performanceGraph.jsx":"15","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\overview.jsx":"16","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\userDetails.jsx":"17","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\wprkstationHook.jsx":"18","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\linearProgress.jsx":"19","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\partsAndOrderHook.jsx":"20","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\processLogHook.jsx":"21","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\parametValues.jsx":"22","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\partDetailsHook.jsx":"23","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\workstationTimeAnalysis.jsx":"24","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\orderHistoryHook.jsx":"25","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\statuschange.jsx":"26"},{"size":544,"mtime":1625812660000,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1625812660000,"results":"29","hashOfConfig":"28"},{"size":1405,"mtime":1625812660000,"results":"30","hashOfConfig":"28"},{"size":481,"mtime":1625812660000,"results":"31","hashOfConfig":"28"},{"size":3769,"mtime":1625812660000,"results":"32","hashOfConfig":"28"},{"size":801,"mtime":1625812660000,"results":"33","hashOfConfig":"28"},{"size":6408,"mtime":1625812660000,"results":"34","hashOfConfig":"28"},{"size":622,"mtime":1625812660000,"results":"35","hashOfConfig":"28"},{"size":3213,"mtime":1625812660000,"results":"36","hashOfConfig":"28"},{"size":8671,"mtime":1625897825403,"results":"37","hashOfConfig":"28"},{"size":2445,"mtime":1625913229108,"results":"38","hashOfConfig":"28"},{"size":10805,"mtime":1625921200632,"results":"39","hashOfConfig":"28"},{"size":1574,"mtime":1625898557435,"results":"40","hashOfConfig":"28"},{"size":2476,"mtime":1625922819758,"results":"41","hashOfConfig":"28"},{"size":8829,"mtime":1625897350853,"results":"42","hashOfConfig":"28"},{"size":5649,"mtime":1625921531888,"results":"43","hashOfConfig":"28"},{"size":1952,"mtime":1625812660000,"results":"44","hashOfConfig":"28"},{"size":2946,"mtime":1625896183638,"results":"45","hashOfConfig":"28"},{"size":1415,"mtime":1625921229401,"results":"46","hashOfConfig":"28"},{"size":1529,"mtime":1625916464209,"results":"47","hashOfConfig":"28"},{"size":896,"mtime":1625897679480,"results":"48","hashOfConfig":"28"},{"size":3164,"mtime":1625923026338,"results":"49","hashOfConfig":"28"},{"size":1604,"mtime":1625898829110,"results":"50","hashOfConfig":"28"},{"size":4823,"mtime":1625922844615,"results":"51","hashOfConfig":"28"},{"size":601,"mtime":1625913164813,"results":"52","hashOfConfig":"28"},{"size":2067,"mtime":1625921480025,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"63kry0",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"56"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},"C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\index.js",[],["126","127"],"C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\App.js",["128"],"import './App.css';\nimport React, {useState} from 'react';\nimport routes from './routes';\nimport { Switch, Route } from 'react-router-dom';\nimport {createStyles, makeStyles} from '@material-ui/core/styles';\nimport ResponsiveDrawer from './components/Dashboard/drawer';\nimport { blueGrey } from '@material-ui/core/colors';\nimport Login from './components/Login/login';\nimport useToken from './useToken';\n\nconst useStyles = makeStyles((theme) => \n  createStyles({\n    content: {\n        flexGrow: 1,\n        display: 'block',\n        padding: theme.spacing(3),\n        position: 'relative',\n        marginTop: 5+'%',\n        textAlign: 'left',\n        marginLeft: 15 + '%',\n        width: 85 + '%',\n        backgroundColor: blueGrey[50],\n        overflowX: 'hidden'\n    },\n  })  \n);\n\n\n\nfunction App() {\n  \n  const classes = useStyles();\n  const {token , setToken} = useToken();\n\n  console.log(token);\n  if(!token){\n    return <Login setToken = {setToken}></Login>\n  }\n\n  return (\n    <div className=\"App\">\n      \n      <ResponsiveDrawer ></ResponsiveDrawer>\n      <Switch>\n        <div className = {classes.content}>\n          {routes.map((route) => (\n            <Route exact path={route.path} key={route.path}>\n              <route.component token = {token} style = {{width: 100+'%', margin: 0}}/>\n            </Route>\n          ))}\n          </div>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\useToken.js",[],"C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Login\\login.jsx",["129"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './login.css';\r\nimport logo from './images/logo.png';\r\nimport db from '../../firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst jwt  = require('jsonwebtoken');\r\n\r\nexport default function Login({setToken}){\r\n    const [form, setForm] = useState({\r\n        Username: '',\r\n        Password: ''\r\n    })\r\n    \r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        var {name, value} = e.target\r\n        setForm({\r\n            ...form,[name]:value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let flag = 1;\r\n        //console.log(form.Username + \" \" + form.Password)\r\n        db.collection('User').get().then((querySnapshot) => {\r\n            console.log(querySnapshot);\r\n            querySnapshot.forEach((doc) => {\r\n          //      console.log(doc.data().Email + \" \" + doc.data().Password + \" \" );\r\n                if(doc.data().email === form.Username && doc.data().password === form.Password){\r\n                    //alert('hello' + doc.data().username);\r\n                    let token = jwt.sign({username: doc.data().username,email: form.Username, password: form.Password}, 'A_VERY_LONG_STRING_FOR_AUTHNETICATION_AND_USER_PROTECTION', {algorithm: 'HS256'}, {expiresIn: '1hr'});\r\n                    setToken(token);\r\n                    console.log(token);\r\n                     \r\n                    flag = 0;\r\n                }\r\n            })\r\n        }).catch(err => alert(err)).then(() => {if (flag === 1) alert('Invalid credentials')});\r\n    }\r\n        return ( \r\n            <section className = 'vh-100 overflow-hidden'>\r\n                <div className = 'contianer-fluid'>\r\n                    <div className = 'row login-container'>\r\n                        <div className = 'login'>\r\n                            <div className = 'col-md-5 col-lg-5 col-xl-4 offset-xl-1 login-form'>\r\n                                <div className = 'col' >\r\n                                    <img className = 'img-fluid mb-3' src= {logo} alt=\"logo\" />\r\n                                </div>\r\n                                <form onSubmit = {handleSubmit} className = 'mt-4'>\r\n                                        <div className = 'form-outline mb-3 col-8'>\r\n                                            <input type=\"email\" id='email' className = 'form-control' name=\"Username\" placeholder = 'Username' onChange = {handleInputChange}/>\r\n                                        </div>\r\n                                        <div className = 'form-outline mb-5 col-8'>\r\n                                            <input type=\"password\" id='password' className = 'form-control' name=\"Password\" placeholder = 'Password' onChange = {handleInputChange}/>\r\n                                        </div>\r\n                                        <div className = 'form-outline col-6'>\r\n                                            <input type=\"Submit\" id='submit' className = 'form-control btn' value = \"Submit\"/>\r\n                                        </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className = 'col-md-3 col-lg-4 col-xl-5 image-container'>\r\n                                <img className = 'image-fluid random'src=\"https://images.unsplash.com/photo-1617396900799-f4ec2b43c7ae?ixid=MnwxMjA3fDB8MHx2aXN1YWwtc2VhcmNofDF8fHxlbnwwfHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"alt-img\" />    \r\n                            </div> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n}\r\n\r\nLogin.propTypes = {\r\n    setToken : PropTypes.func.isRequired\r\n}\r\n","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\routes.jsx",[],"C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\drawer.jsx",["130","131"],"import React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Dashboard,LocalShipping, ExitToApp ,Assignment } from '@material-ui/icons';\r\nimport header from './Images/header.jpg';\r\nimport {Grid} from '@material-ui/core';\r\nimport { withRouter } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst drawerWidth = 15+'%';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth})`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  links: {\r\n    fontFamily: 'Baloo Da 2, cursive', \r\n    fontSize: '10rem',\r\n    '&$focusVisible': {\r\n      backgroundColor: theme.palette.action.selected,\r\n    },\r\n    '&$selected, &$selected:hover': {\r\n      color: 'red',\r\n    },\r\n    '&$disabled': {\r\n      opacity: 0.5,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction logout(){\r\n  localStorage.clear();\r\n  sessionStorage.clear();\r\n  <Redirect to = '/login'/>\r\n}\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const username = jwt.decode(props.token)\r\n  //console.log(username.username)\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawerData = [\r\n      {\r\n          title: 'Dashboard',\r\n          icon: Dashboard,\r\n          link: '/'\r\n      },{\r\n        title: \"Today's Report\",\r\n        icon: Assignment,\r\n        link: '/todayreport'\r\n    },{\r\n          title: 'Order History',\r\n          icon: LocalShipping,\r\n          link: '/orderHistory'\r\n      },{\r\n          title: 'Log Out',\r\n          icon: ExitToApp,\r\n          onClick : logout\r\n      }\r\n  ];\r\n  //backgroundColor: '#13154e'\r\n  const drawer = (\r\n    <div style={{backgroundColor: 'white', overflow: 'hidden', height: 100+'vh',  tranparency: 0.52}}>\r\n      <div style={{color: 'white', overflow: 'hidden', backgroundImage: 'url(\"https://images.unsplash.com/photo-1518112166137-85f9979a43aa?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MjB8fGxpbmVzfGVufDB8MXwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\")'}}>\r\n        <Typography style={{marginTop: 20+'%',textAlign: 'center', fontStyle: 'italic',fontFamily: 'Baloo Da 2, cursive'}}>\r\n            <h2>FSM</h2>\r\n        </Typography>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List style= {{height: 100+'vh', overflow: 'hidden'}}>\r\n        {drawerData.map((data) => {\r\n          return(\r\n          <a href= {data.link} className = {classes.links} style={{color: 'white', textDecoration: 'none', fontFamily: 'Baloo Da 2, cursive'}}>\r\n          <ListItem  selected = {classes.active} button>\r\n            <Grid component = {data.icon} style= {{marginRight: 10+'%', marginLeft: 10+'%'}}></Grid>\r\n            <ListItemText style={{fontFamily: 'Baloo Da 2, cursive'}} multiline = {classes.links} classes= {classes.links} primary={data.title} onClick = {data.onClick}/>\r\n          </ListItem>\r\n          </a>\r\n          );    \r\n    })}\r\n      </List>\r\n      <Divider />\r\n      </div> \r\n    </div>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root} style={{margin:0, border: 'none'}}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar style = {{padding: 0,}}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            <img src = {header} style= {{width: 100+'%', margin: 0, height: 100+'%', padding: 0}} alt ='FSM-Logo'></img>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\" >\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer \r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n            style={{}}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n  token: PropTypes.func\r\n};\r\n\r\nexport default withRouter(ResponsiveDrawer);\r\n","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\firebase.js",[],"C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\allElements.jsx",["132"],"import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {  Grid, CardContent} from '@material-ui/core';\r\nimport UserDetails from './elements/userDetails';\r\nimport Overview from './elements/overview';\r\nimport PerformanceGraph from './elements/performanceGraph';\r\nimport Workstations from './elements/workstations';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    performanceGraph: {\r\n        display: 'block',\r\n        width: 100+'%',\r\n        [theme.breakpoints.down('md')]:{\r\n            display: 'block',\r\n            width: 100+'%'\r\n        }\r\n    },\r\n    overView: {\r\n        display: 'inline-block',\r\n        width:100+'%',\r\n        [theme.breakpoints.down('md')]:{\r\n            display: 'block',\r\n            width: 100+'%'\r\n        }\r\n    },\r\n    ProcessLog: {\r\n        display: 'inline-block',\r\n        float: 'left',\r\n        width: 100+'%',\r\n        [theme.breakpoints.down('md')]:{\r\n            display: 'block',\r\n            width: 100+'%'\r\n        }\r\n    },\r\n    OrderHistory: {\r\n        display: 'inline-block',\r\n        float: 'right',\r\n        width: 40+'%',\r\n        marginBottom: 2+'%',\r\n        [theme.breakpoints.down('md')]:{\r\n            display: 'block',\r\n            width: 100+'%',\r\n            marginBottom: 2+'%'\r\n        }\r\n    },\r\n    cardIcon: {\r\n        display: 'flex', \r\n        justifyContent: 'center',\r\n        height: 8+'vh',\r\n        float: 'right', \r\n        width: 4+'vw', \r\n        borderTopLeftRadius: 100+'%',\r\n        borderBottomLeftRadius: 100+'%',\r\n        borderBottomRightRadius: 100+'%'\r\n    }\r\n}));\r\nAllDashboardElements.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n    token: PropTypes.string\r\n  };\r\n\r\nexport default function AllDashboardElements(props){\r\n    \r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    console.log(props.token)\r\n    return(\r\n        <Grid>\r\n                <Grid>\r\n                    <UserDetails token = {props.token}></UserDetails>\r\n                    <hr />\r\n                </Grid>\r\n                \r\n                    <Grid id = 'Overview' className = {classes.overView} style= {{padding: 2+'%'}}>\r\n                        <Overview token = {props.token}></Overview>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <Grid   id = 'PerformanceGraph' className = {classes.performanceGraph} style= {{ height:100+'%', width: 100+'%' }}>\r\n                        <Grid>\r\n                            <CardContent style={{}}>\r\n                                <Grid>\r\n                                    <PerformanceGraph token = {props.token} style={{ }}></PerformanceGraph>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                \r\n                <Grid  id = 'Workstations' style={{display: 'inline-block', width: 100+'%'}}>\r\n                    <Workstations></Workstations>\r\n                </Grid>\r\n        </Grid>\r\n    );\r\n\r\n\r\n}\r\n","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\report.jsx",["133"],"import React from 'react';\r\nimport { Grid, Typography,Card,CardHeader, CardContent, Table, TableRow, TableBody, TableCell, CardActionArea } from '@material-ui/core';\r\nimport { Assignment } from '@material-ui/icons';\r\nimport BarGraph from './barchart';\r\nimport DonutGraph from './donutchart';\r\nimport useParameterValues from './parametValues';\r\n\r\nconst getDate = () => {\r\n    var today = new Date();\r\n\r\n    return (today.getDate() + '/' + (today.getMonth() + 1) + '/' + today.getFullYear())\r\n}\r\n\r\nexport default function Report(){\r\n\r\n    const {avgAvail, avgOEE, avgPer, avgQual} = useParameterValues();\r\n\r\n    return(\r\n        <Grid style={{height: 82.5+'vh'}}>\r\n            <Grid>\r\n                <Typography style={{}}>\r\n                    <h1 style={{display: 'inline-block'}}>Report</h1>\r\n                    <p style={{display: 'inline-block',fontSize: 13, marginLeft: 1+'%'}} variant = 'body2'>as on {getDate()}</p>\r\n                    <Typography style={{ marginTop: 1+'%', float:' right'}}>\r\n                    <h6>Generate Report <Assignment></Assignment></h6>\r\n                    </Typography>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid style={{display: 'flex',alignItems: 'stretch', marginTop: 2+'%', height: 60+'vh'}}>\r\n                <Card style={{flex: 1}}>\r\n                <CardHeader \r\n                        style={{paddingBottom: 0}}\r\n                        title = {\r\n                            <div>\r\n                                <h3>Parameter Analytics</h3>\r\n                                <hr />\r\n                            </div>\r\n                        }\r\n                    />\r\n                    <CardContent style={{padding: 2+'%', textAlign: 'center',paddingTop: 0, height: 40+'vh'}}>\r\n                        <Table style={{width: 80+'%',margin: 'auto'}}>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                       Average OEE\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {avgOEE}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                \r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                    Average Performance\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {avgPer}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                \r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                    Average Quality\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {avgQual}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                \r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                    Average Availiblity\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {avgAvail}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </CardContent>\r\n                </Card>\r\n                <Card style={{flex: 1}}>\r\n                <CardHeader \r\n                        title={\r\n                            <div>\r\n                                <h3>Part Details</h3>\r\n                                <hr></hr>\r\n                            </div>\r\n                        }\r\n                    />\r\n                    <CardContent style={{padding: 5+'%', paddingTop: 0}}>\r\n                        <BarGraph></BarGraph>\r\n                    </CardContent>\r\n                </Card>\r\n                <Card style={{flex: 1}}>\r\n                <CardHeader \r\n                            title= {\r\n                                <div>\r\n                                    <h3 style={{display: 'inline-block'}}>Time Analysis</h3>\r\n                                    <p style={{display: 'inline-block', marginLeft: 2+'%'}}variant = 'body2'>( in minutes )</p>\r\n                                    <hr />\r\n                                </div>\r\n                            }\r\n                        />\r\n                        <CardContent>\r\n                            <DonutGraph></DonutGraph>\r\n                        </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n/*<Grid style={{flex: '1'}}>\r\n                <Card>\r\n                    <CardHeader \r\n                        style={{paddingBottom: 0}}\r\n                        title = {\r\n                            <div>\r\n                                <h3>Parameter Analytics</h3>\r\n                                <hr />\r\n                            </div>\r\n                        }\r\n                    />\r\n                    <CardContent style={{padding: 2+'%', textAlign: 'center',paddingTop: 0, height: 40+'vh'}}>\r\n                        <Table style={{width: 80+'%',margin: 'auto'}}>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                       Average OEE\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {avgOEE}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                \r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                    Average Performance\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {avgPerf}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                \r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                    Average Quality\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {avgQual}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                \r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                    Average Availiblity\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {avgAvail}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid style={{flex: 1}}>\r\n                <Card >\r\n                    <CardHeader \r\n                        title={\r\n                            <div>\r\n                                <h3>Part Details</h3>\r\n                                <hr></hr>\r\n                            </div>\r\n                        }\r\n                    />\r\n                    <CardContent style={{padding: 5+'%', paddingTop: 0}}>\r\n                        <BarGraph></BarGraph>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid style={{flex: 1,maxWidth: 30+'%'}}>\r\n                    <Card>\r\n                        <CardHeader \r\n                            title= {\r\n                                <div>\r\n                                    <h3 style={{display: 'inline-block'}}>Time Analysis</h3>\r\n                                    <p style={{display: 'inline-block', marginLeft: 2+'%'}}variant = 'body2'>( in minutes )</p>\r\n                                    <hr />\r\n                                </div>\r\n                            }\r\n                        />\r\n                        <CardContent>\r\n                            <DonutGraph></DonutGraph>\r\n                        </CardContent>\r\n                    </Card>\r\n            </Grid>*/","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\orderHistory.jsx",[],"C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\workstations.jsx",[],"C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\barchart.jsx",["134","135","136","137"],"import { blue, green, orange } from '@material-ui/core/colors';\r\nimport {Bar, Chart} from 'react-chartjs-2';\r\nimport usePartDetails from './partDetailsHook';\r\n\r\nexport default function BarGraph(){\r\n\r\n  const {defective3By2, defective5By2, good3By2, good5By2} = usePartDetails();\r\n\r\n  const labels = ['5/2', '3/2'];\r\n  var data = {\r\n      labels: labels,\r\n      datasets: [{\r\n        label: \"Good Part\",\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n        borderColor:'rgb(255, 99, 132)',\r\n        data: [good5By2,good3By2]\r\n      }, {\r\n        label: \"Defective\",\r\n        backgroundColor: 'rgba(255, 159, 64, 0.5)',\r\n        boderColor: 'rgb(255, 159, 64)',\r\n        data: [defective5By2, defective3By2]\r\n      },]\r\n    };\r\n    \r\n    const config = {\r\n      reponsive: true,\r\n      maintainAspectRatio: true,\r\n        scales: {\r\n          x: {\r\n          },\r\n          y: {\r\n            title: {\r\n              display: false,\r\n              text: 'Value'\r\n            }\r\n          }\r\n        },\r\n        interaction: {\r\n          intersect: false\r\n        },\r\n        plugins: {\r\n          legend: {\r\n            display: true,\r\n            position: 'bottom',\r\n            labels: {\r\n              fontSize: 0.1+'vw',\r\n              color: 'hsl(238, 61%, 19%)',\r\n              font: '\"Baloo Da 2\", cursive',\r\n              borderRadius: 100+'px'\r\n            }\r\n          }\r\n        },\r\n    };\r\n\r\n    \r\n\r\n \r\n      return(\r\n          <div style={{width: 100+'%', height: 100+'%'}}>\r\n          <Bar data={data} options = {config}/>\r\n          </div>\r\n      )\r\n  }","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\donutchart.jsx",["138","139","140","141"],"import { blue, green, orange } from '@material-ui/core/colors';\r\nimport {Doughnut, Chart} from 'react-chartjs-2';\r\nimport useWorsktationTimeAnalytics from './workstationTimeAnalysis';\r\n\r\nexport default function DonutGraph(){\r\n\r\n const {workstation1Time, workstation2Time, workstation3Time} = useWorsktationTimeAnalytics();\r\n\r\nconst data = {\r\n    height: 40+'vh',\r\n    labels: [\r\n      'Workstation 1',\r\n      'Workstation 2',\r\n      'Workstation 3'\r\n    ],\r\n    datasets: [{\r\n      label: 'My First Dataset',\r\n      data: [workstation1Time.time, workstation2Time.time, workstation3Time.time],\r\n      backgroundColor: [\r\n        'rgb(255, 99, 132)',\r\n        'rgb(54, 162, 235)',\r\n        'rgb(255, 205, 86)'\r\n      ],\r\n      hoverOffset: 2,\r\n      \r\n    }]\r\n  };  \r\n  const config = {\r\n     \r\n    reponsive: true,\r\n    maintainAspectRatio: false,\r\n    elements: {\r\n        arc: {\r\n            radius: 2\r\n        }\r\n    },\r\n      scales: {\r\n        x: {\r\n            display: false,\r\n            grid: {\r\n                display: false\r\n            }\r\n        },\r\n        y: {\r\n            display: false,\r\n            grid: {\r\n                display: false\r\n            }\r\n        }\r\n      },\r\n      interaction: {\r\n        intersect: false\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          display: true,\r\n          position: 'bottom',\r\n          labels: {\r\n            fontSize: 0.1+'vw',\r\n            color: 'hsl(238, 61%, 19%)',\r\n            font: '\"Baloo Da 2\", cursive'\r\n          }\r\n        }\r\n      },tooltips: {\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            //get the concerned dataset\r\n            var dataset = data.datasets[tooltipItem.datasetIndex];\r\n            //calculate the total of this data set\r\n            var total = dataset.data.reduce(function(previousValue, currentValue, currentIndex, array) {\r\n              return previousValue + currentValue;\r\n            });\r\n            //get the current items value\r\n            var currentValue = dataset.data[tooltipItem.index];\r\n            //calculate the precentage based on the total and current item, also this does a rough rounding to give a whole number\r\n            var percentage = Math.floor(((currentValue/total) * 100)+0.5);\r\n      \r\n            return percentage + \"%\";\r\n          }\r\n        }\r\n      } \r\n  };\r\n\r\n  \r\n\r\n\r\n      return(\r\n          <div style={{}}>\r\n          <Doughnut data={data} options = {config}/>\r\n          </div>\r\n      )\r\n  }","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\performanceGraph.jsx",["142","143","144"],"import React from 'react';\r\nimport { withStyles} from '@material-ui/core';\r\nimport {Line, Chart} from 'react-chartjs-2';\r\nimport StreamingPlugin from 'chartjs-plugin-streaming';\r\nimport 'chartjs-adapter-luxon';\r\nimport { ShowChart } from '@material-ui/icons';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport {Grid,Card, CardContent, CardHeader,CardActionArea, Table, TableRow, TableCell, TableBody, TableHead} from '@material-ui/core'\r\nimport {Scrollbars } from 'rc-scrollbars';\r\nimport useParameterValues from './parametValues';\r\nimport useProcessStatus from './processLogHook';\r\nimport db from '../../../../firebase';\r\nimport { useState } from 'react';\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\nChart.register(StreamingPlugin);\r\n\r\n//const useStyles = makeStyles({});\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: grey[800],\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nexport default function PerformanceGraph(){\r\n  //const theme = useTheme();\r\n    const {avgOEE, avgAvail, avgPer, avgQual, currentOEE, currentAvail, currentQual, currentPer} = useParameterValues();\r\n\r\n    const customLabel = [\r\n    {\r\n      icon: ShowChart,\r\n      text: 'OEE',\r\n      value: avgOEE,\r\n      color: '#1199EE',\r\n    },{\r\n      icon: ShowChart,\r\n      text: 'Performance',\r\n      value: avgPer,\r\n      color: '#D1A166',\r\n    },{\r\n      icon: ShowChart,\r\n      text: 'Quality',\r\n      value: avgQual,\r\n      color: '#E03409',\r\n    },{\r\n      icon: ShowChart,\r\n      text: 'Availibility',\r\n      value: avgAvail,\r\n      color: '#000000',\r\n    }\r\n  ]\r\n\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        id: 'oee',\r\n        label: 'OEE',\r\n        //backgroundColor: 'hsla(203,87%,50%,0.5)',\r\n        borderColor: '#1199EE',\r\n        data: [],\r\n        borderWidth: 2,\r\n        pointRadius: 0,\r\n    \r\n      },\r\n      {\r\n        id: 'performance',\r\n        label: 'Performance',\r\n        //backgroundColor: 'hsla(33, 54%, 61%,0.5)',\r\n        borderColor: '#D1A166',\r\n        data: [],\r\n        borderWidth: 2,\r\n        pointRadius: 0,\r\n      \r\n      },\r\n      {\r\n        id: 'availibility',\r\n        label: 'Availibility',\r\n        //backgroundColor: 'hsla(12, 92%, 46%,0.5)',\r\n        borderColor: '#E03409',\r\n        data: [],\r\n        borderWidth: 2,\r\n        pointRadius: 0,\r\n      \r\n      },{\r\n        id: 'quality',\r\n        label: 'Quality',\r\n        //backgroundColor: 'hsla(0, 0%, 0%,0.5)',   \r\n        borderColor: '#000000',\r\n        data: [],\r\n        borderWidth: 2,\r\n        pointRadius: 0,\r\n      }\r\n    ]\r\n  };\r\n \r\n  const onRefresh = chart => {\r\n    const now = Date.now();\r\n \r\n    chart.data.datasets[0].data.push({x: now, y: currentOEE})\r\n    chart.data.datasets[1].data.push({x: now, y: currentPer})\r\n    chart.data.datasets[2].data.push({x: now, y: currentQual})\r\n    chart.data.datasets[3].data.push({x: now, y: currentAvail})\r\n\r\n    //  chart.data.datasets.forEach((dataset,id) => {\r\n      //  dataset.data.push({\r\n        //  x: now,\r\n         // y: Math.random()*100\r\n        //});\r\n     // });\r\n    \r\n    \r\n  };\r\n\r\n  const config = {\r\n    reponsive: true,\r\n    maintainAspectRatio: true,\r\n      scales: {\r\n        x: {\r\n          type: 'realtime',\r\n          realtime: {\r\n            duration: 20000,\r\n            refresh: 1000,\r\n            delay: 2000,\r\n            onRefresh: onRefresh\r\n          }\r\n        },\r\n        y: {\r\n          title: {\r\n            display: false,\r\n            text: 'Value'\r\n          }\r\n        }\r\n      },\r\n      interaction: {\r\n        intersect: false\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n          position: 'bottom',\r\n          labels: {\r\n            fontSize: 0.1+'vw',\r\n            color: 'hsl(238, 61%, 19%)',\r\n            font: '\"Baloo Da 2\", cursive'\r\n          }\r\n        }\r\n      },\r\n  };\r\n\r\n    const {processLog} = useProcessStatus();\r\n\r\n    return(\r\n        <div style={{display: 'flex', justifyContent: 'space-between',width: 100+'%',}}>\r\n          <Card style={{display: 'inline-block',width: 65+'%', height: 100+'%',boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px'}}>\r\n            <CardHeader \r\n            title= {\r\n                <div>\r\n                  <h4> Workstation 1 Analytics</h4>\r\n                  <hr />\r\n                  </div>\r\n               }\r\n            />\r\n            <CardActionArea style={{textAlign :'center'}}>\r\n            {customLabel.map((label) => (\r\n                <Grid style= {{ margin: 1+'%',width: 20+'%', display: 'inline-block'}}>\r\n                <Grid style={{display: 'inline-block',padding: 6+'%', backgroundColor: label.color, borderRadius: 100+'%'}}>\r\n                <ShowChart style={{color: 'white'}} size = 'large'></ShowChart>\r\n                </Grid>\r\n                  <Grid style={{display: 'inline-block', marginLeft: 5+ '%', verticalAlign: 'top'}}>\r\n                  <h4 style={{marginBottom: 0}}>{label.value}</h4>\r\n                  <p variant = 'body2' >{label.text}</p>\r\n                  </Grid>\r\n                </Grid>\r\n            ))}\r\n            </CardActionArea>\r\n            <CardContent style={{}}>\r\n                <Line data = {data} options = {config} style={{}} />\r\n            </CardContent>\r\n            </Card>\r\n            <div item style={{ display: 'inline-block', maxHeight: 100+'%', width: 32+'%'}}>\r\n            <Card style={{width: 100+'%', display: 'block',boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',}}>\r\n              <CardHeader style={{paddingBottom: 0}}\r\n                title = {\r\n                  <div>\r\n                    <h4>Process Log</h4>\r\n                    <hr />\r\n                  </div>\r\n                } \r\n              />\r\n              <CardContent style={{paddingTop: 0}}>\r\n                <Table stickyHeader style={{width: 100+'%',overflow : 'auto', height: 65+'vh', fontFamily: 'Baloo Da 2, cursive', display: 'block'}}>\r\n                <Scrollbars>\r\n                <TableHead>\r\n                    <TableRow>\r\n                      <StyledTableCell>Process</StyledTableCell>\r\n                      <StyledTableCell>TimeStamp</StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {processLog.map((aProcess) => (\r\n\r\n                    <StyledTableRow>\r\n                      <StyledTableCell>\r\n                        {aProcess.process}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                        {aProcess.date}\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                    \r\n                    ))\r\n                  }\r\n                    \r\n                  </TableBody>\r\n                  </Scrollbars>\r\n                </Table>\r\n              </CardContent>\r\n            </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n/*<Table style={{display: 'block',overflow: 'scroll', height: 100+'%'}}>\r\n                  <TableHead >\r\n                    <StyledTableRow>\r\n                      <TableCell>Process</TableCell>\r\n                      <TableCell>TimeStamp</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody style={{ overflowY: 'scroll', height: 100+'%'}} >\r\n                    <TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow><TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow><TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow>\r\n\r\n                    \r\n                  </TableBody>\r\n                </Table>*/","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\overview.jsx",["145","146","147","148"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, Grid, CardContent, Typography } from '@material-ui/core';\r\nimport { ShoppingBasket,Delete, Build,Done} from '@material-ui/icons';\r\nimport { blue, red, orange, green } from '@material-ui/core/colors';\r\nimport LinearWithValueLable from './linearProgress';\r\nimport PropTypes from 'prop-types';\r\nimport usePartsAndOrder from './partsAndOrderHook';\r\nimport db from '../../../../firebase';\r\nimport useStatusChange from './statuschange';\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\n//const useStyles = makeStyles({});\r\n\r\n/*db.collection('Order').doc('Status').get().then((doc)=> {\r\n   \r\n        console.log(doc.data());\r\n})\r\n\r\ndb.collection('Order').doc('Status').get().then((doc) => {\r\n    totalManufactured = doc.get('Total Manufactured');\r\n    totalDefective = doc.get('Total Defective');\r\n    \r\n    let orderReceived =true\r\n    console.log(doc.get('Received'));\r\n    if (orderReceived){\r\n        db.collection('OrderTest').doc('CurrentOrder').onSnapshot((doc) => {\r\n            orderProcess = doc.get('Process');\r\n            if( orderProcess !== 'Waiting...'){\r\n                    \r\n            }\r\n        })\r\n    }\r\n})\r\n\r\n*/\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        display: 'flex', \r\n        justifyContent: 'center',\r\n        height: 8+'vh',\r\n        float: 'right', \r\n        width: 4+'vw', \r\n        borderTopLeftRadius: 100+'%',\r\n        borderBottomLeftRadius: 100+'%',\r\n        borderBottomRightRadius: 100+'%',\r\n    },\r\n    shadow : {\r\n        boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\nexport default function Overview(props){\r\n\r\n    const classes = useStyles();\r\n    let partType= 'NA'\r\n    const {manufactured, defective, process, orderType} = usePartsAndOrder();\r\n    const {totalProgess} = useStatusChange()\r\n\r\n    return(\r\n        <Grid>\r\n        \r\n                <Card className= {classes.shadow} style={{width: 23+'%', display: 'inline-block', marginRight: 2+'%'}}>\r\n                    <Grid className = {classes.card}  style={{backgroundColor: blue[500]}}><ShoppingBasket fontSize = 'large' style={{marginTop: 25+'%', color: 'white'}}></ShoppingBasket></Grid>\r\n                    <CardContent style = {{marginLeft: 5+'%', marginTop:2+'%', paddingBottom: 1+'%'}}>\r\n                        <Typography>\r\n                            <Typography><h4 style={{marginBottom: 0}}>{manufactured}</h4></Typography>\r\n                            <p>Total Maufactured</p>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n                <Card className= {classes.shadow} style={{width: 23+'%', display: 'inline-block', marginRight: 2+'%'}}>\r\n                    <Grid className = {classes.card} style={{backgroundColor: red[500]}}><Delete fontSize = 'large' style={{marginTop: 25+'%', color: 'white'}}></Delete></Grid>\r\n                    <CardContent style = {{marginLeft: 5+'%', marginTop:2+'%', paddingBottom: 1+'%'}}>\r\n                        <Typography>\r\n                            <Typography><h4 style={{marginBottom: 0}}>{defective}</h4></Typography>\r\n                            <p>Defective</p>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n                <Card className= {classes.shadow} style={{width: 23+'%', display: 'inline-block', marginRight: 2+'%'}}>\r\n                    <Grid className = {classes.card} style={{backgroundColor: orange[500]}}><Build fontSize = 'large' style={{marginTop: 25+'%', color: 'white'}}></Build></Grid>\r\n                    <CardContent style = {{marginLeft: 5+'%', marginTop:2+'%', paddingBottom: 1+'%'}}>\r\n                        <Typography>\r\n                            <Typography><h4 style={{marginBottom: 0}}>{orderType}</h4></Typography>\r\n                            <p>Part Maufactured</p>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n                <Card className= {classes.shadow} style={{width: 23+'%', display: 'inline-block', marginRight: 2+'%'}}>\r\n                    <Grid className = {classes.card} style={{backgroundColor: green[500]}}><Done fontSize = 'large' style={{marginTop: 25+'%', color: 'white'}}></Done></Grid>\r\n                    <CardContent style = {{marginLeft: 5+'%', marginTop:2+'%', paddingBottom: 1+'%'}}>\r\n                        <Typography>\r\n                            <LinearWithValueLable progress = {totalProgess}></LinearWithValueLable>\r\n                            <p>{process}</p>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n                \r\n        </Grid>\r\n    ); \r\n}\r\n\r\nOverview.propTypes = {\r\n    token: PropTypes.func\r\n}\r\n/*         <Card style={{display: 'inline-block', width: 50+'%', textAlign: 'center', justifyContent: 'center'}}>\r\n                \r\n                <CardContent style={{padding: 10+'%'}}>\r\n                    <Grid><ShowChart style={{display: 'inline-block', marginRight: 5+'%'}}></ShowChart><h4 style={{display: 'inline-block'}}>Total Progress</h4></Grid>\r\n                        <CircularStatic style={{width: 100+'%', height: 200}}></CircularStatic>\r\n                        <Typography style={{color: 'hsl(44, 83%, 60%)'}}>\r\n                            <p >Process Review</p>\r\n                            <h5 style={{fontWeight: 900}}>Inserting Spool</h5>\r\n                        </Typography>\r\n                    </CardContent>\r\n    \r\n            </Card>\r\n*/","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\userDetails.jsx",["149","150"],"import React from 'react';\r\n//import { makeStyles } from '@material-ui/styles';\r\nimport { Grid} from '@material-ui/core';\r\nimport { Typography } from '@material-ui/core';\r\nimport Clock from 'react-live-clock';\r\nimport PropTypes from 'prop-types';\r\nimport db from '../../../../firebase';\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\n//const useStyles = makeStyles({});\r\n\r\n/*db.collection('Order').doc('Status').get().then((doc)=> {\r\n   \r\n        console.log(doc.data());\r\n})\r\n*/\r\n\r\n\r\nconst getDate = () => {\r\n    var today = new Date();\r\n    var dayName = getDayName(today.getDay());\r\n\r\n    return (dayName + ',' +today.getDate() + '/' + (today.getMonth() + 1) + '/' + today.getFullYear())\r\n}\r\n\r\nfunction getDayName(number){\r\n    switch(number){\r\n        case 0 : return ('Sunday');\r\n        case 1: return ('Monday');\r\n        case 2: return ('Tuesday');\r\n        case 3: return ('Wednesday');\r\n        case 4: return('Thrusday');\r\n        case 5: return('Friday');\r\n        case 6: return('Saturday');\r\n        default: return 'not a number';\r\n    }\r\n}\r\nexport default function UserDetails(props){\r\n    const username = jwt.decode(props.token)\r\n    console.log(username)\r\n\r\n    return(\r\n        <Grid style={{color: '#13154e',width: 100+'%', height: 5+'vh'}}>\r\n            <Grid style={{float: 'left'}}>\r\n                <h4>Hello, {username.username}</h4>\r\n            </Grid>\r\n            <Grid style= {{float: 'right'}}>\r\n                <Typography > \r\n                {getDate()} &nbsp;\r\n                <Clock format = 'HH:mm:ss' ticking = {true}></Clock>\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n\r\n}\r\n\r\nUserDetails.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n    token: PropTypes.string\r\n  };","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\wprkstationHook.jsx",["151","152"],"import db from '../../../../firebase';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\nexport default function useWorkstationData(){\r\n    const [workstation1, setWorkstation1] = useState([{\r\n        power: false,\r\n        pnumatic: false,\r\n        user: 'None',\r\n        inventory: 'None',\r\n        pressure: 0,\r\n        process: 'NA',\r\n        part: 'None'\r\n    }]);\r\n    const [workstation2, setWorkstation2] = useState([{\r\n        power: false,\r\n        pnumatic: false,\r\n        user: 'None',\r\n        inventory: 'None',\r\n        pressure: 0,\r\n        process: 'NA',\r\n        part: 'None'\r\n    }]);\r\n    const [workstation3, setWorkstation3] = useState([{\r\n        power: false,\r\n        pnumatic: false,\r\n        user: 'None',\r\n        inventory: 'None',\r\n        pressure: 0,\r\n        process: 'NA',\r\n        part: 'None'\r\n    }]);\r\n\r\n    useEffect(() => {\r\n        db.collection('Realtime').doc('WS 1').onSnapshot((doc) => {\r\n            setWorkstation1({\r\n                ...workstation1, \r\n                power : doc.data().powerStatus ? doc.data().powerStatus : false,\r\n                pnumatic: doc.data().stnPressure ? doc.data().stnPressure : 0,\r\n                user: doc.data().user ? doc.data().user : \"NA\",\r\n                inventory: doc.data().inventory ? doc.data().inventory : 0,\r\n                pressure: doc.data().bar ? doc.data().bar : 0,\r\n                process: doc.data().status ? doc.data().status  : 'NA'\r\n            })\r\n        })\r\n    \r\n        db.collection('Realtime').doc('WS 2').onSnapshot((doc) => {\r\n            setWorkstation2({\r\n                ...workstation2, \r\n                power : doc.data().powerStatus ? doc.data().powerStatus : false,\r\n                pnumatic: doc.data().stnPressure ? doc.data().stnPressure : 0,\r\n                user: doc.data().user ? doc.data().user : \"NA\",\r\n                inventory: doc.data().inventory ? doc.data().inventory : 0,\r\n                pressure: doc.data().bar ? doc.data().bar : 0,\r\n                process: doc.data().status ? doc.data().status  : 'NA'\r\n            })\r\n        })\r\n    \r\n        db.collection('Realtime').doc('WS 3').onSnapshot((doc) => {\r\n            setWorkstation3({\r\n                ...workstation3, \r\n                power : doc.data().powerStatus ? doc.data().powerStatus : false,\r\n                pnumatic: doc.data().stnPressure ? doc.data().stnPressure : 0,\r\n                user: doc.data().user ? doc.data().user : \"NA\",\r\n                inventory: doc.data().inventory ? doc.data().inventory : 0,\r\n                pressure: doc.data().bar ? doc.data().bar : 0,\r\n                process: doc.data().status ? doc.data().status  : 'NA'\r\n            })\r\n        })\r\n    }, [])\r\n    \r\n\r\n   console.log(workstation1)\r\n    return{\r\n        workstation1,\r\n        workstation2,\r\n        workstation3\r\n    }\r\n}","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\linearProgress.jsx",["153"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport useStatusChange from './statuschange';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"block\">\r\n        \r\n      <Box>\r\n        <Typography>{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n      <Box width=\"100%\">\r\n        <LinearProgress variant=\"determinate\" {...props} style={{color: 'red'}}/>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default function LinearWithValueLabel(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgressWithLabel value={parseInt(props.progress)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  progress: PropTypes.number.isRequired,\r\n};\r\n","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\partsAndOrderHook.jsx",["154","155","156"],"import db from '../../../../firebase';\r\nimport { useState } from 'react';\r\nimport React from 'react';\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\n\r\nexport default function usePartsAndOrder(){\r\n    const [manufactured, setManufactured] = useState(0)\r\n    const [defective, setDefective] = useState(0)\r\n    const [process, setProcess] = useState(\"No Order\")\r\n    const [orderType, setOrderType] = useState('No Order')\r\n\r\n    React.useEffect(() => {\r\n        db.collection('Order').doc('Status').get().then((doc) => {\r\n            setManufactured(doc.get('Total Manufactured'));\r\n            setDefective(doc.get('Total Defective'));\r\n            \r\n                db.collection('OrderTest').doc('CurrentOrder').onSnapshot((doc) => {\r\n                    setProcess(doc.get('Process'));\r\n                    if( process !== 'Waiting...'){\r\n                        setProcess(doc.get('Process'));\r\n                        db.collection(\"Order\").orderBy(\"Time\", \"desc\").limit(1).onSnapshot((snapshot) => {\r\n                          setOrderType(snapshot.docs[0].data().Type)\r\n                        });\r\n                    }\r\n                })\r\n            \r\n        })\r\n\r\n        //db.collection(\"Order\").orderBy(\"Time\", \"desc\").limit(1).onSnapshot((snapshot) => {\r\n          //  setOrderTime( new Date(snapshot.docs[0].data().Time.seconds))\r\n        //});\r\n\r\n    }, [0])\r\n    return{\r\n        defective,\r\n        manufactured,\r\n        process,\r\n        orderType\r\n    }\r\n}","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\processLogHook.jsx",["157","158","159"],"import db from '../../../../firebase';\r\nimport { useState } from 'react';\r\nimport React from 'react';\r\nimport { useEffect } from 'react';\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\nconst processLog = [{\r\n}];\r\n\r\nexport default function useProcessStatus(){\r\n    const [process, setProcess] = useState([\"No Order\"])\r\n    React.useEffect(() => {\r\n    db.collection('OrderTest').doc('CurrentOrder').onSnapshot((doc) => {\r\n        const date = new Intl.DateTimeFormat('en-GB', { dateStyle: 'full', timeStyle: 'long' }).format(Date.now());\r\n        //console.log(enUSFormatter.format(date) + new Date().getTime());\r\n        const processPart = doc.data().Process\r\n        processLog.push({ process : processPart, date : date});\r\n        setProcess(processLog)\r\n    })\r\n}, [])\r\n    console.log(processLog)\r\n    return{\r\n        processLog\r\n    }\r\n}","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\parametValues.jsx",["160","161","162"],"import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport React from 'react'\r\nimport db from '../../../../firebase';\r\nconst firebase = require('firebase');\r\n\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\nvar numberOfEntries = 0;\r\n\r\nexport default function useParameterValues(){\r\n    const [avgOEE, setAvgOEE] = useState(0);\r\n    const [avgAvail, setAvgAvail] = useState(0);\r\n    const [avgPer, setAvgPer] = useState(0);\r\n    const [avgQual, setAvgQual] = useState(0);\r\n    const [currentOEE, setCurrentOEE] = useState(0);\r\n    const [currentAvail, setCurrentAvail] = useState(0);\r\n    const [currentQual, setCurrentQual] = useState(0);\r\n    const [currentPer, setCurrentPer] = useState(0);\r\n\r\n    console.log(avgOEE+\" \"+avgAvail+\" \"+avgPer+\" \"+avgQual)\r\n  React.useEffect(() => {\r\n    db.collection('Realtime').doc('WS 1').onSnapshot((doc) => {\r\n      console.log(doc.data().oee)\r\n        numberOfEntries += 1;\r\n        setCurrentOEE(doc.data().oee + 10);\r\n        setCurrentAvail(doc.data().availability + 10);\r\n        setCurrentPer(doc.data().performance + 10);\r\n        setCurrentQual(doc.data().quality + 10);\r\n        console.log(currentOEE+\" \"+currentAvail+\" \"+currentPer+\" \"+currentQual)\r\n\r\n        setAvgOEE(((avgOEE*numberOfEntries + currentOEE)/(numberOfEntries+1)).toFixed(3));\r\n        setAvgAvail(((avgAvail*numberOfEntries + currentAvail)/(numberOfEntries+1)).toFixed(3));\r\n        setAvgQual(((avgQual*numberOfEntries + currentQual)/(numberOfEntries+1)).toFixed(3));\r\n        setAvgPer(((avgPer*numberOfEntries + currentPer)/(numberOfEntries+1)).toFixed(3));\r\n\r\n        console.log(avgOEE+\" \"+avgAvail+\" \"+avgPer+\" \"+avgQual)\r\n\r\n\r\n    })\r\n  }, [])\r\nreturn{\r\n    avgOEE,\r\n    avgAvail,\r\n    avgPer,\r\n    avgQual,\r\n    currentAvail,\r\n    currentOEE,currentPer,\r\n    currentQual\r\n}\r\n}\r\n\r\n/*const onRefresh = chart => {\r\n  const now = Date.now();\r\n  numberOfEntries += 1;\r\n  let currentOEE =0;\r\n  let currentAvail =0;\r\n  let currentQual =0;\r\n  let currentPer =0;\r\n  if( props.token ){\r\n  db.collection('Realtime').doc('WS 1').get().then((doc) => {\r\n    console.log('hello')\r\n    currentOEE = doc.data().oee + Math.random()*100\r\n    currentAvail = doc.data().availability +  Math.random()*100\r\n    currentQual = doc.data().quality +  Math.random()*100\r\n    currentPer = doc.data().performance +  Math.random()*100\r\n    console.log(avgOEE + \",\" + avgAvail+','+avgPer+','+avgQual);\r\n    //chart.data.datasets.forEach((dataset,id) => {\r\n      //dataset.data.push({\r\n       // x: now,\r\n        //y: doc.data().id\r\n      //});\r\n    //});\r\n    chart.data.datasets[0].data.push({x: now, y: currentOEE})\r\n    chart.data.datasets[1].data.push({x: now, y: currentPer})\r\n    chart.data.datasets[2].data.push({x: now, y: currentQual})\r\n    chart.data.datasets[3].data.push({x: now, y: currentAvail})\r\n\r\n\r\n\r\n    \r\n  })\r\n  setAvgOEE((avgOEE*numberOfEntries + currentOEE)/(numberOfEntries+1));\r\n  setAvgAvail((avgAvail*numberOfEntries + currentAvail)/(numberOfEntries+1));\r\n  setAvgQual((avgQual*numberOfEntries + currentQual)/(numberOfEntries+1));\r\n  setAvgPer((avgPer*numberOfEntries + currentPer)/(numberOfEntries+1));\r\n\r\n\r\n};\r\n}*/","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\partDetailsHook.jsx",["163","164","165"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport db from '../../../../firebase';\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\nexport default function usePartDetails(){\r\n\r\n    const [defective5By2, setDefective5By2] = useState(0);\r\n    const [good5By2, setGood5By2] = useState(0)\r\n    const [defective3By2, setDefective3By2] = useState(0);\r\n    const [good3By2, setGood3By2] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n            db.collection('Order').onSnapshot((doc) => {\r\n                doc.forEach((document) => {\r\n                    if(document.id !== 'Status'){\r\n                        var partType = document.data().Type;\r\n                        \r\n                        if(partType === '5/2'){\r\n                            if( document.data().Good === '1'){\r\n                                setGood5By2(parseInt(good5By2) + 1);\r\n                            }else{\r\n                                setDefective5By2(parseInt(defective5By2) + 1);\r\n                            }\r\n                        }else{\r\n                            if( document.data().Good === '1'){\r\n                                setGood3By2(parseInt(good3By2) + 1);\r\n                            }else{\r\n                                setDefective3By2(parseInt(defective3By2) + 1);\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    return{\r\n        defective3By2,\r\n        defective5By2,\r\n        good3By2,\r\n        good5By2\r\n    }\r\n    \r\n}","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\workstationTimeAnalysis.jsx",["166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184"],"import React from 'react';\r\nimport { useState} from 'react';\r\nimport db from '../../../../firebase';\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\n\r\nexport default function useWorsktationTimeAnalytics(){\r\n    const [workstation1Time, setWorkstation1Time] = useState({\r\n        entry: false,\r\n        entryTimestamp: new Date(),\r\n        exitTimeStamp: new Date(),\r\n        exit: false,\r\n        time: 0\r\n    });\r\n    const [workstation2Time, setWorkstation2Time] = useState({\r\n        entry: false,\r\n        exit: false,\r\n        entryTimestamp: new Date(),\r\n        exitTimeStamp: new Date(),\r\n        time: 0\r\n    });\r\n    const [workstation3Time, setWorkstation3Time] = useState({\r\n        entry: false,\r\n        exit: false,\r\n        entryTimestamp: new Date(),\r\n        exitTimeStamp: new Date(),\r\n        time: 0\r\n    });\r\n\r\n    React.useEffect(() => {\r\n   \r\n        \r\n        //db.collection(\"Order\").orderBy(\"Time\", \"desc\").limit(1).onSnapshot((snapshot) => {\r\n          //  setOrderTime( new Date(snapshot.docs[0].data().Time.seconds))\r\n        //});\r\n\r\n        db.collection('Realtime').doc('WS 1').onSnapshot((snapshot) => {\r\n            //console.log(snapshot.docs[0].data().timeStamp + \" \" +snapshot.docs[1].data().timeStamp + \" \" +snapshot.docs[2].data().timeStamp)\r\n                if(workstation1Time.entry == false){\r\n                   if(snapshot.data().entry == 'true'){\r\n                    setWorkstation1Time({...workstation1Time, entry: true, entryTimestamp: new Date().getTime()})\r\n                     }\r\n            }\r\n                if(workstation1Time.exit == false){\r\n                    if(snapshot.data().exit == 'true'){\r\n                        setWorkstation1Time({...workstation1Time, entryTimestamp: new Date().getTime()})\r\n                    }\r\n            }\r\n\r\n            if(workstation1Time.entry == true && workstation1Time.exit == true){\r\n                let newtime = ((workstation1Time.exit - workstation1Time.entry)/60);\r\n                setWorkstation1Time({...workstation1Time, time : newtime })\r\n            }\r\n\r\n            })\r\n\r\n            db.collection('Realtime').doc('WS 2').onSnapshot((snapshot) => {\r\n                //console.log(snapshot.docs[0].data().timeStamp + \" \" +snapshot.docs[1].data().timeStamp + \" \" +snapshot.docs[2].data().timeStamp)\r\n                    if(workstation2Time.entry == false){\r\n                       if(snapshot.data().entry == 'true'){\r\n                        setWorkstation2Time({...workstation2Time, entry: true, entryTimestamp: new Date().getTime()})\r\n                         }\r\n                }\r\n                    if(workstation2Time.exit == false){\r\n                        if(snapshot.data().exit == 'true'){\r\n                            setWorkstation2Time({...workstation2Time, entryTimestamp: new Date().getTime()})\r\n                        }\r\n                }\r\n    \r\n                if(workstation2Time.entry == true && workstation2Time.exit == true){\r\n                    let newtime = ((workstation2Time.exit - workstation2Time.entry)/60);\r\n                    setWorkstation2Time({...workstation2Time, time : newtime })\r\n                }\r\n    \r\n                })\r\n    \r\n                db.collection('Realtime').doc('WS 3').onSnapshot((snapshot) => {\r\n                    //console.log(snapshot.docs[0].data().timeStamp + \" \" +snapshot.docs[1].data().timeStamp + \" \" +snapshot.docs[2].data().timeStamp)\r\n                        if(workstation3Time.entry == false){\r\n                           if(snapshot.data().entry == 'true'){\r\n                            setWorkstation3Time({...workstation3Time, entry: true, entryTimestamp: new Date().getTime()})\r\n                             }\r\n                    }\r\n                        if(workstation3Time.exit == false){\r\n                            if(snapshot.data().exit == 'true'){\r\n                                setWorkstation3Time({...workstation3Time, entryTimestamp: new Date().getTime()})\r\n                            }\r\n                    }\r\n        \r\n                    if(workstation3Time.entry == true && workstation3Time.exit == true){\r\n                        let newtime = ((workstation3Time.exit - workstation3Time.entry)/60);\r\n                        setWorkstation3Time({...workstation3Time, time : newtime })\r\n                    }\r\n        \r\n                    })\r\n        \r\n                        \r\n            //let time1 = snapshot.docs[0].data().timeStamp\r\n           //let time2 = snapshot.docs[1].data().timeStamp\r\n           //let time3 = snapshot.docs[2].data().timeStamp\r\n            //console.log(time1.split(\" \")[1].split('.'))\r\n            \r\n        }, [])\r\n\r\n    \r\n        console.log(workstation1Time.time)\r\n    return{\r\n        workstation1Time,\r\n        workstation2Time,\r\n        workstation3Time\r\n    }\r\n}","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\orderHistoryHook.jsx",["185","186"],"import React from 'react';\r\nimport { useState} from 'react';\r\nimport db from '../../../../firebase';\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\nexport default function useOrderHistoryDetails() {\r\n    const [history, setHistory] = useState([]);\r\n\r\n\r\n    React.useEffect(() => {\r\n    db.collection('Order').onSnapshot((doc) => {\r\n        doc.forEach((document) => {\r\n            if(document.data().Type){\r\n                setHistory([...history, document.data()])\r\n            }\r\n        })\r\n    })\r\n}, []);\r\n    return{\r\n        history\r\n    }\r\n}","C:\\Users\\HP\\Desktop\\FSM_Website-routing\\src\\components\\Dashboard\\Dashboard Elements\\elements\\statuschange.jsx",["187","188","189"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport db from '../../../../firebase';\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\n\r\nexport default function useStatusChange(){\r\n\r\n    const [workstation1Status, setWorkstation1Status] = useState(0);\r\n    const [workstation2Status, setWorkstation2Status] = useState(0);\r\n    const [workstation3Status, setWorkstation3Status] = useState(0);\r\n    const [totalProgess, setTotalProgress] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        db.collection('Realtime').doc('WS 1').onSnapshot((snapshot) => {\r\n            \r\n            if(snapshot.data().status === 'Completed')\r\n            setWorkstation1Status(100)\r\n            else if(snapshot.data().status !== workstation1Status){\r\n                    setWorkstation1Status(workstation1Status + 4)\r\n\r\n            }\r\n        })\r\n\r\n        db.collection('Realtime').doc('WS 2').onSnapshot((snapshot) => {\r\n            if(snapshot.data().status === 'Completed')\r\n            setWorkstation2Status(100)\r\n            else if(snapshot.data().status !== workstation2Status){\r\n                    setWorkstation1Status(workstation2Status + 4)\r\n\r\n            }\r\n        })\r\n\r\n        db.collection('Realtime').doc('WS 3').onSnapshot((snapshot) => {\r\n            if(snapshot.data().status === 'Completed')\r\n            setWorkstation3Status(100)\r\n            else if(snapshot.data().status !== workstation3Status){\r\n                    setWorkstation3Status(workstation3Status + 4)\r\n\r\n            }\r\n        })\r\n\r\n        db.collection('OrderTest').doc('CurrentOrder').onSnapshot((snapshot) => {\r\n            if(snapshot.data().Process === 'Completed')\r\n            setWorkstation3Status(100)\r\n            else if(snapshot.data().Process !== workstation3Status){\r\n                    setWorkstation3Status(workstation3Status + 0.4)\r\n\r\n            }\r\n        })\r\n    },[])\r\n\r\n    return{\r\n        workstation1Status,\r\n        workstation2Status,\r\n        workstation3Status,\r\n        totalProgess\r\n    }\r\n\r\n}",{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":2,"column":16,"nodeType":"196","messageId":"197","endLine":2,"endColumn":24},{"ruleId":"194","severity":1,"message":"198","line":6,"column":10,"nodeType":"196","messageId":"197","endLine":6,"endColumn":18},{"ruleId":"194","severity":1,"message":"199","line":1,"column":16,"nodeType":"196","messageId":"197","endLine":1,"endColumn":25},{"ruleId":"194","severity":1,"message":"200","line":84,"column":9,"nodeType":"196","messageId":"197","endLine":84,"endColumn":17},{"ruleId":"194","severity":1,"message":"201","line":69,"column":11,"nodeType":"196","messageId":"197","endLine":69,"endColumn":16},{"ruleId":"194","severity":1,"message":"202","line":2,"column":96,"nodeType":"196","messageId":"197","endLine":2,"endColumn":110},{"ruleId":"194","severity":1,"message":"203","line":1,"column":10,"nodeType":"196","messageId":"197","endLine":1,"endColumn":14},{"ruleId":"194","severity":1,"message":"204","line":1,"column":16,"nodeType":"196","messageId":"197","endLine":1,"endColumn":21},{"ruleId":"194","severity":1,"message":"205","line":1,"column":23,"nodeType":"196","messageId":"197","endLine":1,"endColumn":29},{"ruleId":"194","severity":1,"message":"206","line":2,"column":14,"nodeType":"196","messageId":"197","endLine":2,"endColumn":19},{"ruleId":"194","severity":1,"message":"203","line":1,"column":10,"nodeType":"196","messageId":"197","endLine":1,"endColumn":14},{"ruleId":"194","severity":1,"message":"204","line":1,"column":16,"nodeType":"196","messageId":"197","endLine":1,"endColumn":21},{"ruleId":"194","severity":1,"message":"205","line":1,"column":23,"nodeType":"196","messageId":"197","endLine":1,"endColumn":29},{"ruleId":"194","severity":1,"message":"206","line":2,"column":19,"nodeType":"196","messageId":"197","endLine":2,"endColumn":24},{"ruleId":"194","severity":1,"message":"207","line":12,"column":8,"nodeType":"196","messageId":"197","endLine":12,"endColumn":10},{"ruleId":"194","severity":1,"message":"195","line":13,"column":10,"nodeType":"196","messageId":"197","endLine":13,"endColumn":18},{"ruleId":"194","severity":1,"message":"208","line":14,"column":7,"nodeType":"196","messageId":"197","endLine":14,"endColumn":15},{"ruleId":"194","severity":1,"message":"207","line":9,"column":8,"nodeType":"196","messageId":"197","endLine":9,"endColumn":10},{"ruleId":"194","severity":1,"message":"208","line":11,"column":7,"nodeType":"196","messageId":"197","endLine":11,"endColumn":15},{"ruleId":"194","severity":1,"message":"209","line":15,"column":7,"nodeType":"196","messageId":"197","endLine":15,"endColumn":10},{"ruleId":"194","severity":1,"message":"210","line":64,"column":9,"nodeType":"196","messageId":"197","endLine":64,"endColumn":17},{"ruleId":"194","severity":1,"message":"207","line":7,"column":8,"nodeType":"196","messageId":"197","endLine":7,"endColumn":10},{"ruleId":"194","severity":1,"message":"208","line":8,"column":7,"nodeType":"196","messageId":"197","endLine":8,"endColumn":15},{"ruleId":"194","severity":1,"message":"208","line":4,"column":7,"nodeType":"196","messageId":"197","endLine":4,"endColumn":15},{"ruleId":"211","severity":1,"message":"212","line":73,"column":8,"nodeType":"213","endLine":73,"endColumn":10,"suggestions":"214"},{"ruleId":"194","severity":1,"message":"215","line":7,"column":8,"nodeType":"196","messageId":"197","endLine":7,"endColumn":23},{"ruleId":"194","severity":1,"message":"208","line":4,"column":7,"nodeType":"196","messageId":"197","endLine":4,"endColumn":15},{"ruleId":"211","severity":1,"message":"216","line":36,"column":8,"nodeType":"213","endLine":36,"endColumn":11,"suggestions":"217"},{"ruleId":"211","severity":1,"message":"218","line":36,"column":9,"nodeType":"219","endLine":36,"endColumn":10},{"ruleId":"194","severity":1,"message":"199","line":4,"column":10,"nodeType":"196","messageId":"197","endLine":4,"endColumn":19},{"ruleId":"194","severity":1,"message":"208","line":5,"column":7,"nodeType":"196","messageId":"197","endLine":5,"endColumn":15},{"ruleId":"194","severity":1,"message":"220","line":13,"column":12,"nodeType":"196","messageId":"197","endLine":13,"endColumn":19},{"ruleId":"194","severity":1,"message":"199","line":1,"column":10,"nodeType":"196","messageId":"197","endLine":1,"endColumn":19},{"ruleId":"194","severity":1,"message":"208","line":5,"column":7,"nodeType":"196","messageId":"197","endLine":5,"endColumn":15},{"ruleId":"211","severity":1,"message":"221","line":42,"column":6,"nodeType":"213","endLine":42,"endColumn":8,"suggestions":"222"},{"ruleId":"194","severity":1,"message":"199","line":2,"column":20,"nodeType":"196","messageId":"197","endLine":2,"endColumn":29},{"ruleId":"194","severity":1,"message":"208","line":4,"column":7,"nodeType":"196","messageId":"197","endLine":4,"endColumn":15},{"ruleId":"211","severity":1,"message":"223","line":37,"column":8,"nodeType":"213","endLine":37,"endColumn":10,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":40,"column":43,"nodeType":"227","messageId":"228","endLine":40,"endColumn":45},{"ruleId":"225","severity":1,"message":"226","line":41,"column":45,"nodeType":"227","messageId":"228","endLine":41,"endColumn":47},{"ruleId":"225","severity":1,"message":"226","line":45,"column":42,"nodeType":"227","messageId":"228","endLine":45,"endColumn":44},{"ruleId":"225","severity":1,"message":"226","line":46,"column":45,"nodeType":"227","messageId":"228","endLine":46,"endColumn":47},{"ruleId":"225","severity":1,"message":"226","line":51,"column":39,"nodeType":"227","messageId":"228","endLine":51,"endColumn":41},{"ruleId":"225","severity":1,"message":"226","line":51,"column":72,"nodeType":"227","messageId":"228","endLine":51,"endColumn":74},{"ruleId":"225","severity":1,"message":"226","line":60,"column":47,"nodeType":"227","messageId":"228","endLine":60,"endColumn":49},{"ruleId":"225","severity":1,"message":"226","line":61,"column":49,"nodeType":"227","messageId":"228","endLine":61,"endColumn":51},{"ruleId":"225","severity":1,"message":"226","line":65,"column":46,"nodeType":"227","messageId":"228","endLine":65,"endColumn":48},{"ruleId":"225","severity":1,"message":"226","line":66,"column":49,"nodeType":"227","messageId":"228","endLine":66,"endColumn":51},{"ruleId":"225","severity":1,"message":"226","line":71,"column":43,"nodeType":"227","messageId":"228","endLine":71,"endColumn":45},{"ruleId":"225","severity":1,"message":"226","line":71,"column":76,"nodeType":"227","messageId":"228","endLine":71,"endColumn":78},{"ruleId":"225","severity":1,"message":"226","line":80,"column":51,"nodeType":"227","messageId":"228","endLine":80,"endColumn":53},{"ruleId":"225","severity":1,"message":"226","line":81,"column":53,"nodeType":"227","messageId":"228","endLine":81,"endColumn":55},{"ruleId":"225","severity":1,"message":"226","line":85,"column":50,"nodeType":"227","messageId":"228","endLine":85,"endColumn":52},{"ruleId":"225","severity":1,"message":"226","line":86,"column":53,"nodeType":"227","messageId":"228","endLine":86,"endColumn":55},{"ruleId":"225","severity":1,"message":"226","line":91,"column":47,"nodeType":"227","messageId":"228","endLine":91,"endColumn":49},{"ruleId":"225","severity":1,"message":"226","line":91,"column":80,"nodeType":"227","messageId":"228","endLine":91,"endColumn":82},{"ruleId":"211","severity":1,"message":"229","line":104,"column":12,"nodeType":"213","endLine":104,"endColumn":14,"suggestions":"230"},{"ruleId":"194","severity":1,"message":"208","line":4,"column":7,"nodeType":"196","messageId":"197","endLine":4,"endColumn":15},{"ruleId":"211","severity":1,"message":"231","line":20,"column":4,"nodeType":"213","endLine":20,"endColumn":6,"suggestions":"232"},{"ruleId":"194","severity":1,"message":"208","line":4,"column":7,"nodeType":"196","messageId":"197","endLine":4,"endColumn":15},{"ruleId":"194","severity":1,"message":"233","line":14,"column":26,"nodeType":"196","messageId":"197","endLine":14,"endColumn":42},{"ruleId":"211","severity":1,"message":"234","line":53,"column":7,"nodeType":"213","endLine":53,"endColumn":9,"suggestions":"235"},"no-native-reassign",["236"],"no-negated-in-lhs",["237"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'useEffect' is defined but never used.","'username' is assigned a value but never used.","'theme' is assigned a value but never used.","'CardActionArea' is defined but never used.","'blue' is defined but never used.","'green' is defined but never used.","'orange' is defined but never used.","'Chart' is defined but never used.","'db' is defined but never used.","'firebase' is assigned a value but never used.","'jwt' is assigned a value but never used.","'partType' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'workstation1', 'workstation2', and 'workstation3'. Either include them or remove the dependency array. You can also do a functional update 'setWorkstation1(w => ...)' if you only need 'workstation1' in the 'setWorkstation1' call.","ArrayExpression",["238"],"'useStatusChange' is defined but never used.","React Hook React.useEffect has a missing dependency: 'process'. Either include it or remove the dependency array.",["239"],"The 0 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'process' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'avgAvail', 'avgOEE', 'avgPer', 'avgQual', 'currentAvail', 'currentOEE', 'currentPer', and 'currentQual'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAvgOEE' needs the current value of 'currentOEE'.",["240"],"React Hook React.useEffect has missing dependencies: 'defective3By2', 'defective5By2', 'good3By2', and 'good5By2'. Either include them or remove the dependency array. You can also do a functional update 'setGood5By2(g => ...)' if you only need 'good5By2' in the 'setGood5By2' call.",["241"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook React.useEffect has missing dependencies: 'workstation1Time', 'workstation2Time', and 'workstation3Time'. Either include them or remove the dependency array. You can also do a functional update 'setWorkstation1Time(w => ...)' if you only need 'workstation1Time' in the 'setWorkstation1Time' call.",["242"],"React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array. You can also do a functional update 'setHistory(h => ...)' if you only need 'history' in the 'setHistory' call.",["243"],"'setTotalProgress' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'workstation1Status', 'workstation2Status', and 'workstation3Status'. Either include them or remove the dependency array. You can also do a functional update 'setWorkstation1Status(w => ...)' if you only need 'workstation1Status' in the 'setWorkstation1Status' call.",["244"],"no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},"Update the dependencies array to be: [workstation1, workstation2, workstation3]",{"range":"259","text":"260"},"Update the dependencies array to be: [process]",{"range":"261","text":"262"},"Update the dependencies array to be: [avgAvail, avgOEE, avgPer, avgQual, currentAvail, currentOEE, currentPer, currentQual]",{"range":"263","text":"264"},"Update the dependencies array to be: [defective3By2, defective5By2, good3By2, good5By2]",{"range":"265","text":"266"},"Update the dependencies array to be: [workstation1Time, workstation2Time, workstation3Time]",{"range":"267","text":"268"},"Update the dependencies array to be: [history]",{"range":"269","text":"270"},"Update the dependencies array to be: [workstation1Status, workstation2Status, workstation3Status]",{"range":"271","text":"272"},[2814,2816],"[workstation1, workstation2, workstation3]",[1422,1425],"[process]",[1694,1696],"[avgAvail, avgOEE, avgPer, avgQual, currentAvail, currentOEE, currentPer, currentQual]",[1485,1487],"[defective3By2, defective5By2, good3By2, good5By2]",[4665,4667],"[workstation1Time, workstation2Time, workstation3Time]",[557,559],"[history]",[1928,1930],"[workstation1Status, workstation2Status, workstation3Status]"]