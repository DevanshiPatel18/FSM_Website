{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\FSM_Website-routing\\\\src\\\\components\\\\Dashboard\\\\Dashboard Elements\\\\elements\\\\performanceGraph.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport { Line, Chart } from 'react-chartjs-2';\nimport StreamingPlugin from 'chartjs-plugin-streaming';\nimport 'chartjs-adapter-luxon';\nimport { ShowChart } from '@material-ui/icons';\nimport { grey } from '@material-ui/core/colors';\nimport { Grid, Card, CardContent, CardHeader, CardActionArea, Table, TableRow, TableCell, TableBody, TableHead } from '@material-ui/core';\nimport { Scrollbars } from 'rc-scrollbars';\nimport useParameterValues from './parametValues';\nimport useProcessStatus from './processLogHook';\nimport db from '../../../../firebase';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst firebase = require('firebase');\n\nrequire('firebase/firestore');\n\nrequire('firebase/auth');\n\nChart.register(StreamingPlugin); //const useStyles = makeStyles({});\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: grey[800],\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nexport default function PerformanceGraph() {\n  _s();\n\n  //const theme = useTheme();\n  var numberOfEntries = 0;\n  const [avgOEE, setAvgOEE] = useState([0]);\n  const [avgAvail, setAvgAvail] = useState([0]);\n  const [avgPer, setAvgPer] = useState([0]);\n  const [avgQual, setAvgQual] = useState([0]);\n  const [currentOEE, setCurrentOEE] = useState([0]);\n  const [currentAvail, setCurrentAvail] = useState([0]);\n  const [currentQual, setCurrentQual] = useState([0]);\n  const [currentPer, setCurrentPer] = useState([0]);\n  useEffect(() => {\n    console.log(avgOEE + \" \" + avgAvail + \" \" + avgPer + \" \" + avgQual);\n    db.collection('Realtime').doc('WS 1').onSnapshot(doc => {\n      console.log(doc.data().oee);\n      numberOfEntries += 1;\n      setCurrentOEE(doc.data().oee);\n      setCurrentAvail(doc.data().availability);\n      setCurrentPer(doc.data().performance);\n      setCurrentQual(doc.data().quality);\n      console.log(currentOEE + \" \" + currentAvail + \" \" + currentPer + \" \" + currentQual);\n      setAvgOEE((avgOEE * numberOfEntries + currentOEE) / (numberOfEntries + 1));\n      setAvgAvail((avgAvail * numberOfEntries + currentAvail) / (numberOfEntries + 1));\n      setAvgQual((avgQual * numberOfEntries + currentQual) / (numberOfEntries + 1));\n      setAvgPer((avgPer * numberOfEntries + currentPer) / (numberOfEntries + 1));\n      console.log(avgOEE + \" \" + avgAvail + \" \" + avgPer + \" \" + avgQual);\n    });\n  });\n  const customLabel = [{\n    icon: ShowChart,\n    text: 'OEE',\n    value: avgOEE,\n    color: '#1199EE'\n  }, {\n    icon: ShowChart,\n    text: 'Performance',\n    value: avgPer,\n    color: '#D1A166'\n  }, {\n    icon: ShowChart,\n    text: 'Quality',\n    value: avgQual,\n    color: '#E03409'\n  }, {\n    icon: ShowChart,\n    text: 'Availibility',\n    value: avgAvail,\n    color: '#000000'\n  }];\n  const data = {\n    datasets: [{\n      id: 'oee',\n      label: 'OEE',\n      //backgroundColor: 'hsla(203,87%,50%,0.5)',\n      borderColor: '#1199EE',\n      data: [],\n      borderWidth: 2,\n      pointRadius: 0\n    }, {\n      id: 'performance',\n      label: 'Performance',\n      //backgroundColor: 'hsla(33, 54%, 61%,0.5)',\n      borderColor: '#D1A166',\n      data: [],\n      borderWidth: 2,\n      pointRadius: 0\n    }, {\n      id: 'availibility',\n      label: 'Availibility',\n      //backgroundColor: 'hsla(12, 92%, 46%,0.5)',\n      borderColor: '#E03409',\n      data: [],\n      borderWidth: 2,\n      pointRadius: 0\n    }, {\n      id: 'quality',\n      label: 'Quality',\n      //backgroundColor: 'hsla(0, 0%, 0%,0.5)',   \n      borderColor: '#000000',\n      data: [],\n      borderWidth: 2,\n      pointRadius: 0\n    }]\n  };\n\n  const onRefresh = chart => {\n    const now = Date.now();\n    chart.data.datasets[0].data.push({\n      x: now,\n      y: currentOEE\n    });\n    chart.data.datasets[1].data.push({\n      x: now,\n      y: currentPer\n    });\n    chart.data.datasets[2].data.push({\n      x: now,\n      y: currentQual\n    });\n    chart.data.datasets[3].data.push({\n      x: now,\n      y: currentAvail\n    }); //  chart.data.datasets.forEach((dataset,id) => {\n    //  dataset.data.push({\n    //  x: now,\n    // y: Math.random()*100\n    //});\n    // });\n  };\n\n  const config = {\n    reponsive: true,\n    maintainAspectRatio: true,\n    scales: {\n      x: {\n        type: 'realtime',\n        realtime: {\n          duration: 20000,\n          refresh: 1000,\n          delay: 2000,\n          onRefresh: onRefresh\n        }\n      },\n      y: {\n        title: {\n          display: false,\n          text: 'Value'\n        }\n      }\n    },\n    interaction: {\n      intersect: false\n    },\n    plugins: {\n      legend: {\n        display: false,\n        position: 'bottom',\n        labels: {\n          fontSize: 0.1 + 'vw',\n          color: 'hsl(238, 61%, 19%)',\n          font: '\"Baloo Da 2\", cursive'\n        }\n      }\n    }\n  };\n  const {\n    processLog\n  } = useProcessStatus();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      width: 100 + '%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        display: 'inline-block',\n        width: 65 + '%',\n        height: 100 + '%',\n        boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" Workstation 1 Analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardActionArea, {\n        style: {\n          textAlign: 'center'\n        },\n        children: customLabel.map(label => /*#__PURE__*/_jsxDEV(Grid, {\n          style: {\n            margin: 1 + '%',\n            width: 20 + '%',\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            style: {\n              display: 'inline-block',\n              padding: 6 + '%',\n              backgroundColor: label.color,\n              borderRadius: 100 + '%'\n            },\n            children: /*#__PURE__*/_jsxDEV(ShowChart, {\n              style: {\n                color: 'white'\n              },\n              size: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            style: {\n              display: 'inline-block',\n              marginLeft: 5 + '%',\n              verticalAlign: 'top'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginBottom: 0\n              },\n              children: label.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              variant: \"body2\",\n              children: label.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        style: {},\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: data,\n          options: config,\n          style: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      item: true,\n      style: {\n        display: 'inline-block',\n        maxHeight: 100 + '%',\n        width: 32 + '%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: 100 + '%',\n          display: 'block',\n          boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          style: {\n            paddingBottom: 0\n          },\n          title: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Process Log\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          style: {\n            paddingTop: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            stickyHeader: true,\n            style: {\n              width: 100 + '%',\n              overflow: 'auto',\n              height: 65 + 'vh',\n              fontFamily: 'Baloo Da 2, cursive',\n              display: 'block'\n            },\n            children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    children: \"Process\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    children: \"TimeStamp\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: processLog.map(aProcess => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    children: aProcess.process\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    children: aProcess.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n}\n/*<Table style={{display: 'block',overflow: 'scroll', height: 100+'%'}}>\r\n                  <TableHead >\r\n                    <StyledTableRow>\r\n                      <TableCell>Process</TableCell>\r\n                      <TableCell>TimeStamp</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody style={{ overflowY: 'scroll', height: 100+'%'}} >\r\n                    <TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow><TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow><TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow>\r\n\r\n                    \r\n                  </TableBody>\r\n                </Table>*/\n\n_s(PerformanceGraph, \"kAFctXC+/OTy4HxiLXTAiODnYxY=\", false, function () {\n  return [useProcessStatus];\n});\n\n_c = PerformanceGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerformanceGraph\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/FSM_Website-routing/src/components/Dashboard/Dashboard Elements/elements/performanceGraph.jsx"],"names":["React","useEffect","withStyles","Line","Chart","StreamingPlugin","ShowChart","grey","Grid","Card","CardContent","CardHeader","CardActionArea","Table","TableRow","TableCell","TableBody","TableHead","Scrollbars","useParameterValues","useProcessStatus","db","useState","firebase","require","register","StyledTableCell","theme","head","backgroundColor","color","palette","common","white","body","fontSize","StyledTableRow","root","action","hover","PerformanceGraph","numberOfEntries","avgOEE","setAvgOEE","avgAvail","setAvgAvail","avgPer","setAvgPer","avgQual","setAvgQual","currentOEE","setCurrentOEE","currentAvail","setCurrentAvail","currentQual","setCurrentQual","currentPer","setCurrentPer","console","log","collection","doc","onSnapshot","data","oee","availability","performance","quality","customLabel","icon","text","value","datasets","id","label","borderColor","borderWidth","pointRadius","onRefresh","chart","now","Date","push","x","y","config","reponsive","maintainAspectRatio","scales","type","realtime","duration","refresh","delay","title","display","interaction","intersect","plugins","legend","position","labels","font","processLog","justifyContent","width","height","boxShadow","textAlign","map","margin","padding","borderRadius","marginLeft","verticalAlign","marginBottom","maxHeight","paddingBottom","paddingTop","overflow","fontFamily","aProcess","process","date"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { withStyles} from '@material-ui/core';\r\nimport {Line, Chart} from 'react-chartjs-2';\r\nimport StreamingPlugin from 'chartjs-plugin-streaming';\r\nimport 'chartjs-adapter-luxon';\r\nimport { ShowChart } from '@material-ui/icons';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport {Grid,Card, CardContent, CardHeader,CardActionArea, Table, TableRow, TableCell, TableBody, TableHead} from '@material-ui/core'\r\nimport {Scrollbars } from 'rc-scrollbars';\r\nimport useParameterValues from './parametValues';\r\nimport useProcessStatus from './processLogHook';\r\nimport db from '../../../../firebase';\r\nimport { useState } from 'react';\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\nChart.register(StreamingPlugin);\r\n\r\n//const useStyles = makeStyles({});\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: grey[800],\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nexport default function PerformanceGraph(){\r\n  //const theme = useTheme();\r\n  var numberOfEntries = 0;\r\n  const [avgOEE, setAvgOEE] = useState([0]);\r\n  const [avgAvail, setAvgAvail] = useState([0]);\r\n  const [avgPer, setAvgPer] = useState([0]);\r\n  const [avgQual, setAvgQual] = useState([0]);\r\n  const [currentOEE, setCurrentOEE] = useState([0]);\r\n  const [currentAvail, setCurrentAvail] = useState([0]);\r\n  const [currentQual, setCurrentQual] = useState([0]);\r\n  const [currentPer, setCurrentPer] = useState([0]);\r\n\r\n  useEffect(() => {\r\n\r\n    console.log(avgOEE+\" \"+avgAvail+\" \"+avgPer+\" \"+avgQual)\r\n \r\n    db.collection('Realtime').doc('WS 1').onSnapshot((doc) => {\r\n      console.log(doc.data().oee)\r\n        numberOfEntries += 1;\r\n        setCurrentOEE(doc.data().oee);\r\n        setCurrentAvail(doc.data().availability);\r\n        setCurrentPer(doc.data().performance);\r\n        setCurrentQual(doc.data().quality);\r\n        console.log(currentOEE+\" \"+currentAvail+\" \"+currentPer+\" \"+currentQual)\r\n\r\n        setAvgOEE((avgOEE*numberOfEntries + currentOEE)/(numberOfEntries+1));\r\n        setAvgAvail((avgAvail*numberOfEntries + currentAvail)/(numberOfEntries+1));\r\n        setAvgQual((avgQual*numberOfEntries + currentQual)/(numberOfEntries+1));\r\n        setAvgPer((avgPer*numberOfEntries + currentPer)/(numberOfEntries+1));\r\n\r\n        console.log(avgOEE+\" \"+avgAvail+\" \"+avgPer+\" \"+avgQual)\r\n\r\n\r\n    })\r\n \r\n\r\n})\r\n\r\n    const customLabel = [\r\n    {\r\n      icon: ShowChart,\r\n      text: 'OEE',\r\n      value: avgOEE,\r\n      color: '#1199EE',\r\n    },{\r\n      icon: ShowChart,\r\n      text: 'Performance',\r\n      value: avgPer,\r\n      color: '#D1A166',\r\n    },{\r\n      icon: ShowChart,\r\n      text: 'Quality',\r\n      value: avgQual,\r\n      color: '#E03409',\r\n    },{\r\n      icon: ShowChart,\r\n      text: 'Availibility',\r\n      value: avgAvail,\r\n      color: '#000000',\r\n    }\r\n  ]\r\n\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        id: 'oee',\r\n        label: 'OEE',\r\n        //backgroundColor: 'hsla(203,87%,50%,0.5)',\r\n        borderColor: '#1199EE',\r\n        data: [],\r\n        borderWidth: 2,\r\n        pointRadius: 0,\r\n    \r\n      },\r\n      {\r\n        id: 'performance',\r\n        label: 'Performance',\r\n        //backgroundColor: 'hsla(33, 54%, 61%,0.5)',\r\n        borderColor: '#D1A166',\r\n        data: [],\r\n        borderWidth: 2,\r\n        pointRadius: 0,\r\n      \r\n      },\r\n      {\r\n        id: 'availibility',\r\n        label: 'Availibility',\r\n        //backgroundColor: 'hsla(12, 92%, 46%,0.5)',\r\n        borderColor: '#E03409',\r\n        data: [],\r\n        borderWidth: 2,\r\n        pointRadius: 0,\r\n      \r\n      },{\r\n        id: 'quality',\r\n        label: 'Quality',\r\n        //backgroundColor: 'hsla(0, 0%, 0%,0.5)',   \r\n        borderColor: '#000000',\r\n        data: [],\r\n        borderWidth: 2,\r\n        pointRadius: 0,\r\n      }\r\n    ]\r\n  };\r\n \r\n  const onRefresh = chart => {\r\n    const now = Date.now();\r\n \r\n    chart.data.datasets[0].data.push({x: now, y: currentOEE})\r\n    chart.data.datasets[1].data.push({x: now, y: currentPer})\r\n    chart.data.datasets[2].data.push({x: now, y: currentQual})\r\n    chart.data.datasets[3].data.push({x: now, y: currentAvail})\r\n\r\n    //  chart.data.datasets.forEach((dataset,id) => {\r\n      //  dataset.data.push({\r\n        //  x: now,\r\n         // y: Math.random()*100\r\n        //});\r\n     // });\r\n    \r\n    \r\n  };\r\n\r\n  const config = {\r\n    reponsive: true,\r\n    maintainAspectRatio: true,\r\n      scales: {\r\n        x: {\r\n          type: 'realtime',\r\n          realtime: {\r\n            duration: 20000,\r\n            refresh: 1000,\r\n            delay: 2000,\r\n            onRefresh: onRefresh\r\n          }\r\n        },\r\n        y: {\r\n          title: {\r\n            display: false,\r\n            text: 'Value'\r\n          }\r\n        }\r\n      },\r\n      interaction: {\r\n        intersect: false\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n          position: 'bottom',\r\n          labels: {\r\n            fontSize: 0.1+'vw',\r\n            color: 'hsl(238, 61%, 19%)',\r\n            font: '\"Baloo Da 2\", cursive'\r\n          }\r\n        }\r\n      },\r\n  };\r\n\r\n    const {processLog} = useProcessStatus();\r\n    return(\r\n        <div style={{display: 'flex', justifyContent: 'space-between',width: 100+'%',}}>\r\n          <Card style={{display: 'inline-block',width: 65+'%', height: 100+'%',boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px'}}>\r\n            <CardHeader \r\n            title= {\r\n                <div>\r\n                  <h4> Workstation 1 Analytics</h4>\r\n                  <hr />\r\n                  </div>\r\n               }\r\n            />\r\n            <CardActionArea style={{textAlign :'center'}}>\r\n            {customLabel.map((label) => (\r\n                <Grid style= {{ margin: 1+'%',width: 20+'%', display: 'inline-block'}}>\r\n                <Grid style={{display: 'inline-block',padding: 6+'%', backgroundColor: label.color, borderRadius: 100+'%'}}>\r\n                <ShowChart style={{color: 'white'}} size = 'large'></ShowChart>\r\n                </Grid>\r\n                  <Grid style={{display: 'inline-block', marginLeft: 5+ '%', verticalAlign: 'top'}}>\r\n                  <h4 style={{marginBottom: 0}}>{label.value}</h4>\r\n                  <p variant = 'body2' >{label.text}</p>\r\n                  </Grid>\r\n                </Grid>\r\n            ))}\r\n            </CardActionArea>\r\n            <CardContent style={{}}>\r\n                <Line data = {data} options = {config} style={{}} />\r\n            </CardContent>\r\n            </Card>\r\n            <div item style={{ display: 'inline-block', maxHeight: 100+'%', width: 32+'%'}}>\r\n            <Card style={{width: 100+'%', display: 'block',boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',}}>\r\n              <CardHeader style={{paddingBottom: 0}}\r\n                title = {\r\n                  <div>\r\n                    <h4>Process Log</h4>\r\n                    <hr />\r\n                  </div>\r\n                } \r\n              />\r\n              <CardContent style={{paddingTop: 0}}>\r\n                <Table stickyHeader style={{width: 100+'%',overflow : 'auto', height: 65+'vh', fontFamily: 'Baloo Da 2, cursive', display: 'block'}}>\r\n                <Scrollbars>\r\n                <TableHead>\r\n                    <TableRow>\r\n                      <StyledTableCell>Process</StyledTableCell>\r\n                      <StyledTableCell>TimeStamp</StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {processLog.map((aProcess) => (\r\n\r\n                    <StyledTableRow>\r\n                      <StyledTableCell>\r\n                        {aProcess.process}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                        {aProcess.date}\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                    \r\n                    ))\r\n                  }\r\n                    \r\n                  </TableBody>\r\n                  </Scrollbars>\r\n                </Table>\r\n              </CardContent>\r\n            </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n/*<Table style={{display: 'block',overflow: 'scroll', height: 100+'%'}}>\r\n                  <TableHead >\r\n                    <StyledTableRow>\r\n                      <TableCell>Process</TableCell>\r\n                      <TableCell>TimeStamp</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody style={{ overflowY: 'scroll', height: 100+'%'}} >\r\n                    <TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow><TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow><TableRow>\r\n                      <TableCell>Pallet entered workstation 1</TableCell>\r\n                      <TableCell>21/02/2021, 12:12:12</TableCell>\r\n                    </TableRow>\r\n\r\n                    \r\n                  </TableBody>\r\n                </Table>*/"]},"metadata":{},"sourceType":"module"}