{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport db from '../../../../firebase';\n\nconst firebase = require('firebase');\n\nrequire('firebase/firestore');\n\nrequire('firebase/auth');\n\nexport default function useWorsktationTimeAnalytics() {\n  _s();\n\n  const [workstation1Time, setWorkstation1Time] = useState(0);\n  const [workstation2time, setWorkstation2Time] = useState(0);\n  const [workstation3Time, setWorkstation3Time] = useState(0);\n  const [currentTimes, setCurrentTimes] = useState({\n    workstation1Timestamp: new Date(),\n    workstation2Timestamp: new Date(),\n    workstation3Timestamp: new Date()\n  });\n  React.useEffect(() => {\n    //db.collection(\"Order\").orderBy(\"Time\", \"desc\").limit(1).onSnapshot((snapshot) => {\n    //  setOrderTime( new Date(snapshot.docs[0].data().Time.seconds))\n    //});\n    db.collection('Realtime').onSnapshot(snapshot => {\n      //console.log(snapshot.docs[0].data().timeStamp + \" \" +snapshot.docs[1].data().timeStamp + \" \" +snapshot.docs[2].data().timeStamp)\n      let time1 = snapshot.docs[0].data().timeStamp;\n      let time2 = snapshot.docs[1].data().timeStamp;\n      let time3 = snapshot.docs[2].data().timeStamp;\n      console.log(snapshot.docs[0].data());\n      console.log(snapshot.docs[1].data());\n      console.log(snapshot.docs[2].data());\n      setCurrentTimes({ ...currentTimes,\n        workstation1Timestamp: new Date(time1),\n        workstation2Timestamp: new Date(time2),\n        workstation3Timestamp: new Date(time3)\n      });\n      console.log(currentTimes);\n      setWorkstation1Time(currentTimes.workstation1Timestamp.getTime());\n      console.log(workstation1Time);\n    });\n  }, []);\n  return workstation1Time, workstation2time, workstation3Time;\n}\n\n_s(useWorsktationTimeAnalytics, \"tNZrPLncWCA18wKNPVlMAf9g7PI=\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/FSM_Website-routing/src/components/Dashboard/Dashboard Elements/elements/workstationTimeAnalysis.jsx"],"names":["React","useState","db","firebase","require","useWorsktationTimeAnalytics","workstation1Time","setWorkstation1Time","workstation2time","setWorkstation2Time","workstation3Time","setWorkstation3Time","currentTimes","setCurrentTimes","workstation1Timestamp","Date","workstation2Timestamp","workstation3Timestamp","useEffect","collection","onSnapshot","snapshot","time1","docs","data","timeStamp","time2","time3","console","log","getTime"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAwB,OAAxB;AACA,OAAOC,EAAP,MAAe,sBAAf;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,eAAD,CAAP;;AAEA,eAAe,SAASC,2BAAT,GAAsC;AAAA;;AACjD,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,CAAD,CAAxD;AAEA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAC5C;AAEIa,IAAAA,qBAAqB,EAAE,IAAIC,IAAJ,EAF3B;AAGIC,IAAAA,qBAAqB,EAAE,IAAID,IAAJ,EAH3B;AAIIE,IAAAA,qBAAqB,EAAG,IAAIF,IAAJ;AAJ5B,GAD4C,CAAhD;AAQAf,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AAGlB;AACE;AACF;AAEAhB,IAAAA,EAAE,CAACiB,UAAH,CAAc,UAAd,EAA0BC,UAA1B,CAAsCC,QAAD,IAAc;AAC/C;AACD,UAAIC,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBC,IAAjB,GAAwBC,SAApC;AACA,UAAIC,KAAK,GAAGL,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBC,IAAjB,GAAwBC,SAApC;AACA,UAAIE,KAAK,GAAGN,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBC,IAAjB,GAAwBC,SAApC;AACCG,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBC,IAAjB,EAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBC,IAAjB,EAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBC,IAAjB,EAAZ;AAEAX,MAAAA,eAAe,CAAC,EAAC,GAAGD,YAAJ;AAAkBE,QAAAA,qBAAqB,EAAG,IAAIC,IAAJ,CAASO,KAAT,CAA1C;AAA2DN,QAAAA,qBAAqB,EAAG,IAAID,IAAJ,CAASW,KAAT,CAAnF;AAAoGT,QAAAA,qBAAqB,EAAG,IAAIF,IAAJ,CAASY,KAAT;AAA5H,OAAD,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,YAAZ;AAEAL,MAAAA,mBAAmB,CAACK,YAAY,CAACE,qBAAb,CAAmCgB,OAAnC,EAAD,CAAnB;AACJF,MAAAA,OAAO,CAACC,GAAR,CAAYvB,gBAAZ;AACC,KAdD;AAgBH,GAvBD,EAuBG,EAvBH;AAyBA,SACIA,gBAAgB,EAChBE,gBADgB,EAEhBE,gBAHJ;AAKH;;GA3CuBL,2B","sourcesContent":["import React from 'react';\r\nimport { useState} from 'react';\r\nimport db from '../../../../firebase';\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\nexport default function useWorsktationTimeAnalytics(){\r\n    const [workstation1Time, setWorkstation1Time] = useState(0);\r\n    const [workstation2time, setWorkstation2Time] = useState(0);\r\n    const [workstation3Time, setWorkstation3Time] = useState(0);\r\n\r\n    const [currentTimes, setCurrentTimes] = useState(\r\n        {\r\n           \r\n            workstation1Timestamp: new Date(),\r\n            workstation2Timestamp: new Date(),\r\n            workstation3Timestamp : new Date()\r\n        }\r\n    )\r\n    React.useEffect(() => {\r\n   \r\n        \r\n        //db.collection(\"Order\").orderBy(\"Time\", \"desc\").limit(1).onSnapshot((snapshot) => {\r\n          //  setOrderTime( new Date(snapshot.docs[0].data().Time.seconds))\r\n        //});\r\n\r\n        db.collection('Realtime').onSnapshot((snapshot) => {\r\n            //console.log(snapshot.docs[0].data().timeStamp + \" \" +snapshot.docs[1].data().timeStamp + \" \" +snapshot.docs[2].data().timeStamp)\r\n           let time1 = snapshot.docs[0].data().timeStamp;\r\n           let time2 = snapshot.docs[1].data().timeStamp;\r\n           let time3 = snapshot.docs[2].data().timeStamp;\r\n            console.log(snapshot.docs[0].data())\r\n            console.log(snapshot.docs[1].data())\r\n            console.log(snapshot.docs[2].data())\r\n           \r\n            setCurrentTimes({...currentTimes, workstation1Timestamp : new Date(time1), workstation2Timestamp : new Date(time2), workstation3Timestamp : new Date(time3)})\r\n            console.log(currentTimes);\r\n\r\n            setWorkstation1Time(currentTimes.workstation1Timestamp.getTime());\r\n        console.log(workstation1Time)\r\n        })\r\n\r\n    }, [])\r\n\r\n    return(\r\n        workstation1Time,\r\n        workstation2time,\r\n        workstation3Time\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}