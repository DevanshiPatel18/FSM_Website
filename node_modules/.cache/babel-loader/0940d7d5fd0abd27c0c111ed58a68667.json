{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport db from '../../../../firebase';\nimport { useState } from 'react';\nimport React from 'react';\nimport { useEffect } from 'react';\n\nconst firebase = require('firebase');\n\nrequire('firebase/firestore');\n\nrequire('firebase/auth');\n\nconst processLog = [{}];\nexport default function useProcessStatus() {\n  _s();\n\n  const [process, setProcess] = useState([\"No Order\"]);\n  React.useEffect(() => {\n    db.collection('OrderTest').doc('CurrentOrder').onSnapshot(doc => {\n      const date = new Intl.DateTimeFormat('en-GB', {\n        dateStyle: 'full',\n        timeStyle: 'long'\n      }).format(Date.now()); //console.log(enUSFormatter.format(date) + new Date().getTime());\n\n      const processPart = doc.data().Process;\n      processLog.push({\n        process: processPart,\n        date: date\n      });\n      setProcess(processLog);\n    });\n  }, []);\n  console.log(processLog);\n  return {\n    processLog\n  };\n}\n\n_s(useProcessStatus, \"zghqPLTiRBEvPQPHV1CMpCO6zBI=\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/FSM_Website-routing/src/components/Dashboard/Dashboard Elements/elements/processLogHook.jsx"],"names":["db","useState","React","useEffect","firebase","require","processLog","useProcessStatus","process","setProcess","collection","doc","onSnapshot","date","Intl","DateTimeFormat","dateStyle","timeStyle","format","Date","now","processPart","data","Process","push","console","log"],"mappings":";;AAAA,OAAOA,EAAP,MAAe,sBAAf;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,eAAD,CAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC,EAAD,CAAnB;AAGA,eAAe,SAASC,gBAAT,GAA2B;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAC,UAAD,CAAD,CAAtC;AACAC,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACtBH,IAAAA,EAAE,CAACU,UAAH,CAAc,WAAd,EAA2BC,GAA3B,CAA+B,cAA/B,EAA+CC,UAA/C,CAA2DD,GAAD,IAAS;AAC/D,YAAME,IAAI,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAAEC,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OAAjC,EAA2EC,MAA3E,CAAkFC,IAAI,CAACC,GAAL,EAAlF,CAAb,CAD+D,CAE/D;;AACA,YAAMC,WAAW,GAAGV,GAAG,CAACW,IAAJ,GAAWC,OAA/B;AACAjB,MAAAA,UAAU,CAACkB,IAAX,CAAgB;AAAEhB,QAAAA,OAAO,EAAGa,WAAZ;AAAyBR,QAAAA,IAAI,EAAGA;AAAhC,OAAhB;AACAJ,MAAAA,UAAU,CAACH,UAAD,CAAV;AACH,KAND;AAOH,GARG,EAQD,EARC;AASAmB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,UAAZ;AACA,SAAM;AACFA,IAAAA;AADE,GAAN;AAGH;;GAfuBC,gB","sourcesContent":["import db from '../../../../firebase';\r\nimport { useState } from 'react';\r\nimport React from 'react';\r\nimport { useEffect } from 'react';\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\nconst processLog = [{\r\n}];\r\n\r\nexport default function useProcessStatus(){\r\n    const [process, setProcess] = useState([\"No Order\"])\r\n    React.useEffect(() => {\r\n    db.collection('OrderTest').doc('CurrentOrder').onSnapshot((doc) => {\r\n        const date = new Intl.DateTimeFormat('en-GB', { dateStyle: 'full', timeStyle: 'long' }).format(Date.now());\r\n        //console.log(enUSFormatter.format(date) + new Date().getTime());\r\n        const processPart = doc.data().Process\r\n        processLog.push({ process : processPart, date : date});\r\n        setProcess(processLog)\r\n    })\r\n}, [])\r\n    console.log(processLog)\r\n    return{\r\n        processLog\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}