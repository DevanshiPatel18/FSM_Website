{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport React from 'react';\nimport db from '../../../../firebase';\n\nconst firebase = require('firebase');\n\nrequire('firebase/firestore');\n\nrequire('firebase/auth');\n\nvar numberOfEntries = 0;\nexport default function useParameterValues() {\n  _s();\n\n  const [avgOEE, setAvgOEE] = useState(0);\n  const [avgAvail, setAvgAvail] = useState(0);\n  const [avgPer, setAvgPer] = useState(0);\n  const [avgQual, setAvgQual] = useState(0);\n  const [currentOEE, setCurrentOEE] = useState(0);\n  const [currentAvail, setCurrentAvail] = useState(0);\n  const [currentQual, setCurrentQual] = useState(0);\n  const [currentPer, setCurrentPer] = useState(0);\n  console.log(avgOEE + \" \" + avgAvail + \" \" + avgPer + \" \" + avgQual);\n  React.useEffect(() => {\n    db.collection('Realtime').doc('WS 1').onSnapshot(doc => {\n      console.log(doc.data().oee);\n      numberOfEntries += 1;\n      setCurrentOEE(doc.data().oee + 10);\n      setCurrentAvail(doc.data().availability + 10);\n      setCurrentPer(doc.data().performance + 10);\n      setCurrentQual(doc.data().quality + 10);\n      console.log(currentOEE + \" \" + currentAvail + \" \" + currentPer + \" \" + currentQual);\n      setAvgOEE((avgOEE * numberOfEntries + currentOEE) / (numberOfEntries + 1));\n      setAvgAvail((avgAvail * numberOfEntries + currentAvail) / (numberOfEntries + 1));\n      setAvgQual((avgQual * numberOfEntries + currentQual) / (numberOfEntries + 1));\n      setAvgPer((avgPer * numberOfEntries + currentPer) / (numberOfEntries + 1));\n      console.log(avgOEE + \" \" + avgAvail + \" \" + avgPer + \" \" + avgQual);\n    });\n  }, []);\n  return {\n    setAvgAvail,\n    setAvgOEE,\n    setAvgPer,\n    setAvgQual,\n    avgOEE,\n    avgAvail,\n    avgPer,\n    avgQual,\n    currentAvail,\n    currentOEE,\n    currentPer,\n    currentQual\n  };\n}\n/*const onRefresh = chart => {\r\n  const now = Date.now();\r\n  numberOfEntries += 1;\r\n  let currentOEE =0;\r\n  let currentAvail =0;\r\n  let currentQual =0;\r\n  let currentPer =0;\r\n  if( props.token ){\r\n  db.collection('Realtime').doc('WS 1').get().then((doc) => {\r\n    console.log('hello')\r\n    currentOEE = doc.data().oee + Math.random()*100\r\n    currentAvail = doc.data().availability +  Math.random()*100\r\n    currentQual = doc.data().quality +  Math.random()*100\r\n    currentPer = doc.data().performance +  Math.random()*100\r\n    console.log(avgOEE + \",\" + avgAvail+','+avgPer+','+avgQual);\r\n    //chart.data.datasets.forEach((dataset,id) => {\r\n      //dataset.data.push({\r\n       // x: now,\r\n        //y: doc.data().id\r\n      //});\r\n    //});\r\n    chart.data.datasets[0].data.push({x: now, y: currentOEE})\r\n    chart.data.datasets[1].data.push({x: now, y: currentPer})\r\n    chart.data.datasets[2].data.push({x: now, y: currentQual})\r\n    chart.data.datasets[3].data.push({x: now, y: currentAvail})\r\n\r\n\r\n\r\n    \r\n  })\r\n  setAvgOEE((avgOEE*numberOfEntries + currentOEE)/(numberOfEntries+1));\r\n  setAvgAvail((avgAvail*numberOfEntries + currentAvail)/(numberOfEntries+1));\r\n  setAvgQual((avgQual*numberOfEntries + currentQual)/(numberOfEntries+1));\r\n  setAvgPer((avgPer*numberOfEntries + currentPer)/(numberOfEntries+1));\r\n\r\n\r\n};\r\n}*/\n\n_s(useParameterValues, \"WjOWHDQ6AhIqSilCZX2Ivcx3yPQ=\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/FSM_Website-routing/src/components/Dashboard/Dashboard Elements/elements/parametValues.jsx"],"names":["useEffect","useState","React","db","firebase","require","numberOfEntries","useParameterValues","avgOEE","setAvgOEE","avgAvail","setAvgAvail","avgPer","setAvgPer","avgQual","setAvgQual","currentOEE","setCurrentOEE","currentAvail","setCurrentAvail","currentQual","setCurrentQual","currentPer","setCurrentPer","console","log","collection","doc","onSnapshot","data","oee","availability","performance","quality"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport React from 'react'\r\nimport db from '../../../../firebase';\r\nconst firebase = require('firebase');\r\n\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\nvar numberOfEntries = 0;\r\n\r\nexport default function useParameterValues(){\r\n    const [avgOEE, setAvgOEE] = useState(0);\r\n    const [avgAvail, setAvgAvail] = useState(0);\r\n    const [avgPer, setAvgPer] = useState(0);\r\n    const [avgQual, setAvgQual] = useState(0);\r\n    const [currentOEE, setCurrentOEE] = useState(0);\r\n    const [currentAvail, setCurrentAvail] = useState(0);\r\n    const [currentQual, setCurrentQual] = useState(0);\r\n    const [currentPer, setCurrentPer] = useState(0);\r\n\r\n    console.log(avgOEE+\" \"+avgAvail+\" \"+avgPer+\" \"+avgQual)\r\n  React.useEffect(() => {\r\n    db.collection('Realtime').doc('WS 1').onSnapshot((doc) => {\r\n      console.log(doc.data().oee)\r\n        numberOfEntries += 1;\r\n        setCurrentOEE(doc.data().oee + 10);\r\n        setCurrentAvail(doc.data().availability + 10);\r\n        setCurrentPer(doc.data().performance + 10);\r\n        setCurrentQual(doc.data().quality + 10);\r\n        console.log(currentOEE+\" \"+currentAvail+\" \"+currentPer+\" \"+currentQual)\r\n\r\n        setAvgOEE((avgOEE*numberOfEntries + currentOEE)/(numberOfEntries+1));\r\n        setAvgAvail((avgAvail*numberOfEntries + currentAvail)/(numberOfEntries+1));\r\n        setAvgQual((avgQual*numberOfEntries + currentQual)/(numberOfEntries+1));\r\n        setAvgPer((avgPer*numberOfEntries + currentPer)/(numberOfEntries+1));\r\n\r\n        console.log(avgOEE+\" \"+avgAvail+\" \"+avgPer+\" \"+avgQual)\r\n\r\n\r\n    })\r\n  }, [])\r\nreturn{\r\n    setAvgAvail,\r\n    setAvgOEE,\r\n    setAvgPer,\r\n    setAvgQual,\r\n    avgOEE,\r\n    avgAvail,\r\n    avgPer,\r\n    avgQual,\r\n    currentAvail,\r\n    currentOEE,currentPer,\r\n    currentQual\r\n}\r\n}\r\n\r\n/*const onRefresh = chart => {\r\n  const now = Date.now();\r\n  numberOfEntries += 1;\r\n  let currentOEE =0;\r\n  let currentAvail =0;\r\n  let currentQual =0;\r\n  let currentPer =0;\r\n  if( props.token ){\r\n  db.collection('Realtime').doc('WS 1').get().then((doc) => {\r\n    console.log('hello')\r\n    currentOEE = doc.data().oee + Math.random()*100\r\n    currentAvail = doc.data().availability +  Math.random()*100\r\n    currentQual = doc.data().quality +  Math.random()*100\r\n    currentPer = doc.data().performance +  Math.random()*100\r\n    console.log(avgOEE + \",\" + avgAvail+','+avgPer+','+avgQual);\r\n    //chart.data.datasets.forEach((dataset,id) => {\r\n      //dataset.data.push({\r\n       // x: now,\r\n        //y: doc.data().id\r\n      //});\r\n    //});\r\n    chart.data.datasets[0].data.push({x: now, y: currentOEE})\r\n    chart.data.datasets[1].data.push({x: now, y: currentPer})\r\n    chart.data.datasets[2].data.push({x: now, y: currentQual})\r\n    chart.data.datasets[3].data.push({x: now, y: currentAvail})\r\n\r\n\r\n\r\n    \r\n  })\r\n  setAvgOEE((avgOEE*numberOfEntries + currentOEE)/(numberOfEntries+1));\r\n  setAvgAvail((avgAvail*numberOfEntries + currentAvail)/(numberOfEntries+1));\r\n  setAvgQual((avgQual*numberOfEntries + currentQual)/(numberOfEntries+1));\r\n  setAvgPer((avgPer*numberOfEntries + currentPer)/(numberOfEntries+1));\r\n\r\n\r\n};\r\n}*/"]},"metadata":{},"sourceType":"module"}