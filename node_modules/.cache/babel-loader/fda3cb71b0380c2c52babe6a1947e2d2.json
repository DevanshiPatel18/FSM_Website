{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport db from '../../../../firebase';\n\nconst firebase = require('firebase');\n\nrequire('firebase/firestore');\n\nrequire('firebase/auth');\n\nexport default function useWorsktationTimeAnalytics() {\n  _s();\n\n  const [workstation1Time, setWorkstation1Time] = useState(0);\n  const [workstation2time, setWorkstation2Time] = useState(0);\n  const [workstation3Time, setWorkstation3Time] = useState(0);\n  const [orderTime, setOrderTime] = useState(new Date());\n  const [currentTimes, setCurrentTimes] = useState({\n    workstation1Timestamp: new Date(),\n    workstation2Timestamp: new Date(),\n    workstation3Timestamp: new Date()\n  });\n  React.useEffect(() => {\n    db.collection(\"Order\").orderBy(\"Time\", \"desc\").limit(1).onSnapshot(snapshot => {\n      setOrderTime(new Date(snapshot.docs[0].data().Time.seconds));\n    });\n    db.collection('Realtime').onSnapshot(snapshot => {\n      //console.log(snapshot.docs[0].data().timeStamp + \" \" +snapshot.docs[1].data().timeStamp + \" \" +snapshot.docs[2].data().timeStamp)\n      setCurrentTimes({ ...currentTimes,\n        workstation1Timestamp: new Date(snapshot.docs[0].data().timeStamp.seconds),\n        workstation2Timestamp: new Date(snapshot.docs[1].data().timeStamp.seconds),\n        workstation3Timestamp: new Date(snapshot.docs[2].data().timeStamp.seconds)\n      });\n    });\n    console.log(currentTimes.workstation1Timestamp.getTime());\n  }, []);\n  return workstation1Time, workstation2time, workstation3Time;\n}\n\n_s(useWorsktationTimeAnalytics, \"krbqDvy62vOl4EB7vX4VZmT04dU=\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/FSM_Website-routing/src/components/Dashboard/Dashboard Elements/elements/workstationTimeAnalysis.jsx"],"names":["React","useState","useEffect","db","firebase","require","useWorsktationTimeAnalytics","workstation1Time","setWorkstation1Time","workstation2time","setWorkstation2Time","workstation3Time","setWorkstation3Time","orderTime","setOrderTime","Date","currentTimes","setCurrentTimes","workstation1Timestamp","workstation2Timestamp","workstation3Timestamp","collection","orderBy","limit","onSnapshot","snapshot","docs","data","Time","seconds","timeStamp","console","log","getTime"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,EAAP,MAAe,sBAAf;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,eAAD,CAAP;;AAEA,eAAe,SAASC,2BAAT,GAAsC;AAAA;;AACjD,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM,CAACU,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAIc,IAAJ,EAAD,CAA1C;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAC5C;AAEIiB,IAAAA,qBAAqB,EAAE,IAAIH,IAAJ,EAF3B;AAGII,IAAAA,qBAAqB,EAAE,IAAIJ,IAAJ,EAH3B;AAIIK,IAAAA,qBAAqB,EAAG,IAAIL,IAAJ;AAJ5B,GAD4C,CAAhD;AAQAf,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AAGlBC,IAAAA,EAAE,CAACkB,UAAH,CAAc,OAAd,EAAuBC,OAAvB,CAA+B,MAA/B,EAAuC,MAAvC,EAA+CC,KAA/C,CAAqD,CAArD,EAAwDC,UAAxD,CAAoEC,QAAD,IAAc;AAC7EX,MAAAA,YAAY,CAAE,IAAIC,IAAJ,CAASU,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,IAAjB,GAAwBC,IAAxB,CAA6BC,OAAtC,CAAF,CAAZ;AACH,KAFD;AAIA1B,IAAAA,EAAE,CAACkB,UAAH,CAAc,UAAd,EAA0BG,UAA1B,CAAsCC,QAAD,IAAc;AAC/C;AACAR,MAAAA,eAAe,CAAC,EAAC,GAAGD,YAAJ;AAAkBE,QAAAA,qBAAqB,EAAI,IAAIH,IAAJ,CAASU,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,IAAjB,GAAwBG,SAAxB,CAAkCD,OAA3C,CAA3C;AAAgGV,QAAAA,qBAAqB,EAAI,IAAIJ,IAAJ,CAAUU,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,IAAjB,GAAwBG,SAAxB,CAAkCD,OAA5C,CAAzH;AAA8KT,QAAAA,qBAAqB,EAAG,IAAIL,IAAJ,CAASU,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,IAAjB,GAAwBG,SAAxB,CAAkCD,OAA3C;AAAtM,OAAD,CAAf;AAEH,KAJD;AAMDE,IAAAA,OAAO,CAACC,GAAR,CAAYhB,YAAY,CAACE,qBAAb,CAAmCe,OAAnC,EAAZ;AAGF,GAhBD,EAgBG,EAhBH;AAkBA,SACI1B,gBAAgB,EAChBE,gBADgB,EAEhBE,gBAHJ;AAKH;;GApCuBL,2B","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport db from '../../../../firebase';\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore')\r\nrequire('firebase/auth')\r\n\r\nexport default function useWorsktationTimeAnalytics(){\r\n    const [workstation1Time, setWorkstation1Time] = useState(0);\r\n    const [workstation2time, setWorkstation2Time] = useState(0);\r\n    const [workstation3Time, setWorkstation3Time] = useState(0);\r\n    const [orderTime, setOrderTime] = useState(new Date);\r\n    const [currentTimes, setCurrentTimes] = useState(\r\n        {\r\n           \r\n            workstation1Timestamp: new Date(),\r\n            workstation2Timestamp: new Date(),\r\n            workstation3Timestamp : new Date()\r\n        }\r\n    )\r\n    React.useEffect(() => {\r\n   \r\n        \r\n        db.collection(\"Order\").orderBy(\"Time\", \"desc\").limit(1).onSnapshot((snapshot) => {\r\n            setOrderTime( new Date(snapshot.docs[0].data().Time.seconds))\r\n        });\r\n\r\n        db.collection('Realtime').onSnapshot((snapshot) => {\r\n            //console.log(snapshot.docs[0].data().timeStamp + \" \" +snapshot.docs[1].data().timeStamp + \" \" +snapshot.docs[2].data().timeStamp)\r\n            setCurrentTimes({...currentTimes, workstation1Timestamp :  new Date(snapshot.docs[0].data().timeStamp.seconds) ,workstation2Timestamp  : new Date( snapshot.docs[1].data().timeStamp.seconds),workstation3Timestamp : new Date(snapshot.docs[2].data().timeStamp.seconds) });\r\n            \r\n        })\r\n        \r\n       console.log(currentTimes.workstation1Timestamp.getTime());\r\n     \r\n\r\n    }, [])\r\n    \r\n    return(\r\n        workstation1Time,\r\n        workstation2time,\r\n        workstation3Time\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}