{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\FSM_Website-routing\\\\src\\\\components\\\\Dashboard\\\\Dashboard Elements\\\\elements\\\\workstations.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Card, CardHeader, Typography } from '@material-ui/core';\nimport { green, red } from '@material-ui/core/colors';\nimport LinearWithValueLabel from './linearProgress';\nimport useWorkstationData from './wprkstationHook';\nimport useStatusChange from './statuschange';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    fontFamily: \"Baloo Da 2, cursive\"\n  },\n  card: {\n    display: 'inline-block',\n    [theme.breakpoints.up('md')]: {\n      width: 32 + '%',\n      zIndex: 1\n    },\n    '&:hover': {\n      transition: 'height 2s',\n      animation: '',\n      zIndex: 3\n    }\n  },\n  [theme.breakpoints.down('sm')]: {\n    card: {\n      padding: 1 + '%'\n    },\n    statusCards: {\n      border: 'none'\n    },\n    cardHeader: {\n      display: 'inline-block',\n      width: 50 + '%',\n      float: 'left'\n    },\n    cardContent: {\n      display: 'inline: block',\n      width: 50 + '%',\n      float: 'right',\n      padding: 2 + '%'\n    }\n  }\n}));\nexport default function Workstations() {\n  _s();\n\n  const classes = useStyles(); //const theme = useTheme();\n\n  const {\n    workstation1,\n    workstation2,\n    workstation3\n  } = useWorkstationData();\n  const {\n    workstation1Status,\n    workstation2Status,\n    workstation3Status\n  } = useStatusChange();\n\n  function setColor(parameter) {\n    if (!parameter || parameter === 'false') return red[500];else return green[500];\n  }\n\n  const WorkStationData = [{\n    name: 'Workstation 1',\n    title: 'Raw Part Storage Loading & QC ',\n    powerColor: setColor(workstation1.power),\n    pnumaticColor: setColor(workstation1.pneumatic),\n    currentProcess: workstation1.process,\n    user: workstation1.user,\n    inventory: workstation1.inventory,\n    part: workstation1.part,\n    power: workstation1.power,\n    pneumatic: workstation1.pneumatic,\n    pressure: workstation1.pressure\n  }, {\n    name: 'Workstation 2',\n    title: 'Axissymetric Part Storage QC & Inspection Work',\n    currentProcess: workstation2.process,\n    powerColor: setColor(workstation1.power),\n    pnumaticColor: setColor(workstation1.pneumatic),\n    user: workstation2.user,\n    inventory: workstation2.inventory,\n    part: workstation2.part,\n    power: workstation2.power,\n    pneumatic: workstation2.pneumatic,\n    pressure: workstation2.pressure\n  }, {\n    name: 'Workstation 3',\n    title: 'Prismatic Part Assembly and Screwing',\n    powerColor: setColor(workstation1.power),\n    pnumaticColor: setColor(workstation1.pneumatic),\n    currentProcess: workstation3.process,\n    user: workstation3.user,\n    inventory: workstation3.inventory,\n    part: workstation3.part,\n    power: workstation3.power,\n    pneumatic: workstation3.pneumatic,\n    pressure: workstation3.pressure\n  }];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.root,\n    children: WorkStationData.map(workstation => /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      style: {\n        width: 30 + '%',\n        marginRight: 1 + '%',\n        marginLeft: 2 + '%',\n        boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        style: {\n          paddingRight: 0\n        },\n        title: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            style: {\n              disply: 'inline-block',\n              float: 'right',\n              width: 25 + '%',\n              marginTop: '-' + 3 + '%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              style: {\n                display: 'inline-block',\n                width: 100 + '%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  textAlign: 'center',\n                  color: 'white',\n                  padding: 5 + '%',\n                  marginBottom: 5 + '%',\n                  borderTopLeftRadius: 100 + '%',\n                  borderBottomLeftRadius: 100 + '%',\n                  backgroundColor: workstation.powerColor\n                },\n                children: \"Power\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              style: {\n                display: 'inline-block',\n                width: 100 + '%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  textAlign: 'center',\n                  color: 'white',\n                  padding: 5 + '%',\n                  marginBottom: 0,\n                  borderTopLeftRadius: 100 + '%',\n                  borderBottomLeftRadius: 100 + '%',\n                  backgroundColor: workstation.pnumaticColor\n                },\n                children: \"Pneumatic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: classes.root,\n            children: workstation.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this),\n        subheader: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: classes.root,\n            style: {\n              fontSize: 10,\n              color: 'hsl(213, 21%, 53%)',\n              fontWeight: 500\n            },\n            children: workstation.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.cardContent,\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.statusCards,\n          style: {\n            display: 'inline-block',\n            width: 30 + '%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            style: {\n              color: 'hsl(238, 61%, 19%)',\n              fontWeight: 900\n            },\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            style: {\n              color: 'hsl(212, 21%, 53%)',\n              fontWeight: 800\n            },\n            children: workstation.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.statusCards,\n          style: {\n            display: 'inline-block',\n            width: 30 + '%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            style: {\n              color: 'hsl(238, 61%, 19%)',\n              fontWeight: 900\n            },\n            children: \"Inventory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            style: {\n              color: 'hsl(212, 21%, 53%)',\n              fontWeight: 800\n            },\n            children: workstation.inventory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.statusCards,\n          style: {\n            display: 'inline-block',\n            width: 30 + '%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            style: {\n              color: 'hsl(238, 61%, 19%)',\n              fontWeight: 900\n            },\n            children: \"Pressure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            style: {\n              color: 'hsl(212, 21%, 53%)',\n              fontWeight: 800\n            },\n            children: workstation.pressure\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        style: {\n          padding: 5 + '%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearWithValueLabel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                fontWeight: 900\n              },\n              children: workstation.currentProcess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n/*\r\n\r\n{WorkStationData.map((workstation) => (\r\n                <Card>\r\n                    <CardHeader \r\n                        title = {\r\n                            <h3 className = {classes.root}>{workstation.name}</h3>\r\n                         }\r\n                        subheader = {\r\n                                <h6 className = {classes.root} style={{ color: 'hsl(213, 21%, 53%)', fontWeight: 500}}>{workstation.title}</h6>\r\n                        }\r\n                    />\r\n                        <Grid className = {classes.cardHeader}>\r\n                            <CircularStatic ></CircularStatic>\r\n                            <Typography>\r\n                                <h6>Progress</h6>\r\n                                <h5 style={{fontWeight: 900}}>{workstation.currentProcess}</h5>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid className={classes.cardContent}>\r\n                            <Paper className = {classes.statusCards} >\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>User</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.user}</h6>\r\n                            </Paper>\r\n                            <Paper className = {classes.statusCards}>\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>Inventory</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.inventory}</h6>\r\n                            </Paper>\r\n                            <Paper className = {classes.statusCards}>\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>Power</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.power}</h6>\r\n                            </Paper>\r\n                            <Paper className = {classes.statusCards}>\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>Part</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.part}</h6>\r\n                            </Paper>\r\n                            <Paper className = {classes.statusCards}>\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>Pnematic</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.pneumatic}</h6>\r\n                            </Paper>\r\n                            <Paper className = {classes.statusCards}>\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>Pressure</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.pressure}</h6>\r\n                            </Paper>\r\n                        </Grid>\r\n                </Card>\r\n            ))}\r\n\r\n\r\n            \r\n                            <Grid style={{display: 'inline-block',padding: 0.25+'%', backgroundColor: green[500], borderRadius: 100+'%'}}>\r\n                            <ShowChart style={{color: green[500], display: 'inline-block'}} ></ShowChart>\r\n                            </Grid>\r\n*/\n\n_s(Workstations, \"opj12q/jZMUhC/5szlTfmnm6c1M=\", false, function () {\n  return [useStyles, useWorkstationData, useStatusChange];\n});\n\n_c = Workstations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workstations\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/FSM_Website-routing/src/components/Dashboard/Dashboard Elements/elements/workstations.jsx"],"names":["React","makeStyles","Grid","Card","CardHeader","Typography","green","red","LinearWithValueLabel","useWorkstationData","useStatusChange","useStyles","theme","root","fontFamily","card","display","breakpoints","up","width","zIndex","transition","animation","down","padding","statusCards","border","cardHeader","float","cardContent","Workstations","classes","workstation1","workstation2","workstation3","workstation1Status","workstation2Status","workstation3Status","setColor","parameter","WorkStationData","name","title","powerColor","power","pnumaticColor","pneumatic","currentProcess","process","user","inventory","part","pressure","map","workstation","marginRight","marginLeft","boxShadow","paddingRight","disply","marginTop","textAlign","color","marginBottom","borderTopLeftRadius","borderBottomLeftRadius","backgroundColor","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Card, CardHeader, Typography } from '@material-ui/core';\r\nimport { green, red} from '@material-ui/core/colors';\r\nimport LinearWithValueLabel from './linearProgress';\r\nimport useWorkstationData from './wprkstationHook';\r\nimport useStatusChange from './statuschange';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        fontFamily: \"Baloo Da 2, cursive\",\r\n    },\r\n card: {\r\n     display: 'inline-block',\r\n    [theme.breakpoints.up('md')]: {\r\n        width: 32+'%',\r\n        zIndex: 1\r\n    },\r\n    '&:hover' :{\r\n        transition: 'height 2s',\r\n        animation: '',\r\n        zIndex: 3,\r\n\r\n    }\r\n    },\r\n        [theme.breakpoints.down('sm')]: {\r\n            card: {\r\n                padding: 1+'%',\r\n            },\r\n            statusCards:{\r\n                border: 'none'\r\n            },\r\n            cardHeader: {\r\n            display: 'inline-block',\r\n            width: 50+'%', \r\n            float: 'left',\r\n            },\r\n            cardContent: {\r\n                \r\n                    display: 'inline: block',\r\n                    width: 50+'%',\r\n                    float: 'right',\r\n                    padding: 2+'%'\r\n                \r\n            }\r\n\r\n        }\r\n    }\r\n\r\n ));\r\n\r\n\r\nexport default function Workstations(){\r\n\r\n    const classes = useStyles();\r\n    //const theme = useTheme();\r\n    const {workstation1, workstation2, workstation3} = useWorkstationData();\r\n    const {workstation1Status, workstation2Status, workstation3Status} = useStatusChange();\r\n\r\n    function setColor(parameter){\r\n        if( !parameter || parameter === 'false')\r\n            return red[500];\r\n        else\r\n            return green[500];\r\n    }\r\n\r\n    const WorkStationData = [\r\n        {\r\n            name: 'Workstation 1',\r\n            title: 'Raw Part Storage Loading & QC ',\r\n            powerColor: setColor(workstation1.power),\r\n            pnumaticColor: setColor(workstation1.pneumatic),\r\n            currentProcess: workstation1.process,\r\n            user: workstation1.user,\r\n            inventory: workstation1.inventory,\r\n            part : workstation1.part,\r\n            power: workstation1.power,\r\n            pneumatic: workstation1.pneumatic,\r\n            pressure: workstation1.pressure\r\n        },{\r\n            name: 'Workstation 2',\r\n            title: 'Axissymetric Part Storage QC & Inspection Work',\r\n            currentProcess: workstation2.process,\r\n            powerColor: setColor(workstation1.power),\r\n            pnumaticColor: setColor(workstation1.pneumatic),\r\n            user: workstation2.user,\r\n            inventory: workstation2.inventory,\r\n            part : workstation2.part,\r\n            power: workstation2.power,\r\n            pneumatic: workstation2.pneumatic,\r\n            pressure: workstation2.pressure\r\n        },{\r\n            name: 'Workstation 3',\r\n            title: 'Prismatic Part Assembly and Screwing',\r\n            powerColor: setColor(workstation1.power),\r\n            pnumaticColor: setColor(workstation1.pneumatic),\r\n            currentProcess: workstation3.process,\r\n            user: workstation3.user,\r\n            inventory: workstation3.inventory,\r\n            part : workstation3.part,\r\n            power: workstation3.power,\r\n            pneumatic: workstation3.pneumatic,\r\n            pressure: workstation3.pressure\r\n        }\r\n    ]\r\n    \r\n    return(\r\n        <Grid className= {classes.root}>\r\n           \r\n{WorkStationData.map((workstation) => (\r\n                <Card className = {classes.card} style={{width: 30+'%', marginRight: 1+'%', marginLeft: 2+'%',boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px'}}>\r\n                    <CardHeader style={{paddingRight: 0}}\r\n                        title = {\r\n                            <div style={{marginRight: 0}}>\r\n                            \r\n                            <Grid style={{disply: 'inline-block',float: 'right', width: 25+'%',marginTop: '-'+3 +'%'}}>\r\n                            <Grid style={{display: 'inline-block',width: 100+'%'}}>\r\n                                \r\n                                <p style={{textAlign: 'center',color:'white',padding: 5+'%',marginBottom: 5+'%', borderTopLeftRadius: 100+'%', borderBottomLeftRadius: 100+'%', backgroundColor: workstation.powerColor}}>Power</p>\r\n                            </Grid>\r\n                            <Grid style={{display: 'inline-block', width: 100+'%'}}>\r\n                                \r\n                                <p style={{textAlign: 'center',color:'white',padding: 5+'%',marginBottom: 0,borderTopLeftRadius: 100+'%', borderBottomLeftRadius: 100+'%', backgroundColor: workstation.pnumaticColor}}>Pneumatic</p>\r\n                            </Grid>\r\n                            \r\n                            \r\n                            </Grid>\r\n                            \r\n                            <h4 className = {classes.root}>{workstation.name}</h4>\r\n                            </div>\r\n                         }\r\n                        subheader = {\r\n                                <div>\r\n                                <h6 className = {classes.root} style={{fontSize: 10, color: 'hsl(213, 21%, 53%)', fontWeight: 500}}>{workstation.title}</h6>\r\n                                <hr/>\r\n                                </div>\r\n                            }\r\n                    />\r\n                        <Grid className={classes.cardContent} style={{textAlign: 'center'}}>\r\n                            <Grid className = {classes.statusCards} style={{display: 'inline-block', width: 30+'%'}} >\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>User</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.user}</h6>\r\n                            </Grid>\r\n                            <Grid className = {classes.statusCards} style={{display: 'inline-block', width: 30+'%'}} >\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>Inventory</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.inventory}</h6>\r\n                            </Grid>\r\n                            <Grid className = {classes.statusCards} style={{display: 'inline-block', width: 30+'%'}}>\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>Pressure</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.pressure}</h6>\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                        <Grid style= {{padding: 5+'%'}}>\r\n                            <div style={{ textAlign: 'center'}}>\r\n                        \r\n                            <LinearWithValueLabel></LinearWithValueLabel>\r\n                            <Typography>\r\n                                <h6>Progress</h6>\r\n                                <h5 style={{fontWeight: 900}}>{workstation.currentProcess}</h5>\r\n                            </Typography>\r\n                            </div>\r\n\r\n                        </Grid>\r\n                </Card>\r\n            ))}\r\n\r\n        </Grid>\r\n    );\r\n\r\n}\r\n/*\r\n\r\n{WorkStationData.map((workstation) => (\r\n                <Card>\r\n                    <CardHeader \r\n                        title = {\r\n                            <h3 className = {classes.root}>{workstation.name}</h3>\r\n                         }\r\n                        subheader = {\r\n                                <h6 className = {classes.root} style={{ color: 'hsl(213, 21%, 53%)', fontWeight: 500}}>{workstation.title}</h6>\r\n                        }\r\n                    />\r\n                        <Grid className = {classes.cardHeader}>\r\n                            <CircularStatic ></CircularStatic>\r\n                            <Typography>\r\n                                <h6>Progress</h6>\r\n                                <h5 style={{fontWeight: 900}}>{workstation.currentProcess}</h5>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid className={classes.cardContent}>\r\n                            <Paper className = {classes.statusCards} >\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>User</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.user}</h6>\r\n                            </Paper>\r\n                            <Paper className = {classes.statusCards}>\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>Inventory</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.inventory}</h6>\r\n                            </Paper>\r\n                            <Paper className = {classes.statusCards}>\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>Power</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.power}</h6>\r\n                            </Paper>\r\n                            <Paper className = {classes.statusCards}>\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>Part</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.part}</h6>\r\n                            </Paper>\r\n                            <Paper className = {classes.statusCards}>\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>Pnematic</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.pneumatic}</h6>\r\n                            </Paper>\r\n                            <Paper className = {classes.statusCards}>\r\n                                <h6 style={{color: 'hsl(238, 61%, 19%)', fontWeight: 900}}>Pressure</h6>\r\n                                <h6 style={{color: 'hsl(212, 21%, 53%)', fontWeight: 800}}>{workstation.pressure}</h6>\r\n                            </Paper>\r\n                        </Grid>\r\n                </Card>\r\n            ))}\r\n\r\n\r\n            \r\n                            <Grid style={{display: 'inline-block',padding: 0.25+'%', backgroundColor: green[500], borderRadius: 100+'%'}}>\r\n                            <ShowChart style={{color: green[500], display: 'inline-block'}} ></ShowChart>\r\n                            </Grid>\r\n*/ "]},"metadata":{},"sourceType":"module"}